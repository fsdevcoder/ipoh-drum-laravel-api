{
    "openapi": "3.0.0",
    "info": {
        "title": "Ipoh Drum Laravel API",
        "description": "This is a swagger-generated API documentation for the project Ipoh Drum. (Only supports OpenAPI Annotations for now.)",
        "contact": {
            "email": "henry_lcz97@hotmail.com"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://172.104.45.205/",
            "description": "The URL that IpohDrum Laravel API is running on."
        }
    ],
    "paths": {
        "/api/article": {
            "get": {
                "tags": [
                    "ArticleControllerService"
                ],
                "summary": "Get list of articles",
                "description": "Returns list of articles",
                "operationId": "getArticles",
                "parameters": [
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "number of pageSize",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved list of articles"
                    },
                    "default": {
                        "description": "Unable to retrieve list of articles"
                    }
                }
            },
            "post": {
                "tags": [
                    "ArticleControllerService"
                ],
                "summary": "Creates a article.",
                "operationId": "createArticle",
                "parameters": [
                    {
                        "name": "blogger_id",
                        "in": "query",
                        "description": "Article belongs To which Blogger",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "title",
                        "in": "query",
                        "description": "Article title",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "desc",
                        "in": "query",
                        "description": "Article description",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "description": "Is this article public?",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "imgs[]": {
                                        "description": "Article Images",
                                        "type": "file",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Article has been created successfully."
                    },
                    "default": {
                        "description": "Unable to create the article."
                    }
                }
            }
        },
        "/api/filter/article": {
            "get": {
                "tags": [
                    "ArticleControllerService"
                ],
                "summary": "Filter list of articles",
                "description": "Returns list of filtered articles",
                "operationId": "filterArticles",
                "parameters": [
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "number of pageSize",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "keyword",
                        "in": "query",
                        "description": "Keyword for filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fromdate",
                        "in": "query",
                        "description": "From Date for filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "todate",
                        "in": "query",
                        "description": "To string for filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "status for filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "company_id",
                        "in": "query",
                        "description": "Company id for filter",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved list of filtered articles"
                    },
                    "default": {
                        "description": "Unable to retrieve list of articles"
                    }
                }
            }
        },
        "/api/article/{uid}": {
            "get": {
                "tags": [
                    "ArticleControllerService"
                ],
                "summary": "Retrieves article by Uid.",
                "operationId": "getArticleByUid",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Article_ID, NOT 'ID'.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Article has been retrieved successfully."
                    },
                    "default": {
                        "description": "Unable to retrieve the article."
                    }
                }
            },
            "put": {
                "tags": [
                    "ArticleControllerService"
                ],
                "summary": "Update article by Uid.",
                "operationId": "updateArticleByUid",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Article_ID, NOT 'ID'.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "blogger_id",
                        "in": "query",
                        "description": "Article belongs To which Blogger",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "title",
                        "in": "query",
                        "description": "Article title",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "desc",
                        "in": "query",
                        "description": "Article description",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "description": "Is this article public?",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Article has been updated successfully."
                    },
                    "default": {
                        "description": "Unable to update the article."
                    }
                }
            },
            "delete": {
                "tags": [
                    "ArticleControllerService"
                ],
                "summary": "Set article's 'status' to 0.",
                "operationId": "deleteArticleByUid",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Article ID, NOT 'ID'.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Article has been 'deleted' successfully."
                    },
                    "default": {
                        "description": "Unable to 'delete' the article."
                    }
                }
            }
        },
        "/api/public/article/{uid}": {
            "get": {
                "tags": [
                    "ArticleControllerService"
                ],
                "summary": "Retrieves public article by Uid.",
                "operationId": "getPublicArticleByUid",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Article ID, NOT 'ID'.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Articles has been retrieved successfully."
                    },
                    "default": {
                        "description": "Unable to retrieved the articles."
                    }
                }
            }
        },
        "/api/public/articles": {
            "get": {
                "tags": [
                    "ArticleControllerService"
                ],
                "summary": "Retrieves all public articles.",
                "operationId": "getPublicArticles",
                "parameters": [
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "number of pageSize",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Articles has been retrieved successfully."
                    },
                    "default": {
                        "description": "Unable to retrieved the articles."
                    }
                }
            }
        },
        "/api/public/articles/filter": {
            "get": {
                "tags": [
                    "ArticleControllerService"
                ],
                "summary": "Filter all public articles.",
                "operationId": "filterPublicArticles",
                "parameters": [
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "number of pageSize",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "keyword",
                        "in": "query",
                        "description": "Keyword for filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fromdate",
                        "in": "query",
                        "description": "From Date for filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "todate",
                        "in": "query",
                        "description": "To string for filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "status for filter",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Articles has been retrieved successfully."
                    },
                    "default": {
                        "description": "Unable to retrieved the articles."
                    }
                }
            }
        },
        "/api/public/article/{uid}/comments": {
            "get": {
                "tags": [
                    "ArticleControllerService"
                ],
                "summary": "Retrieves all public comments.",
                "operationId": "getPublicArticleComments",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Article ID, NOT 'ID'.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "number of pageSize",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Comments has been retrieved successfully."
                    },
                    "default": {
                        "description": "Unable to retrieved the comments."
                    }
                }
            }
        },
        "/api/articleimage": {
            "post": {
                "tags": [
                    "ArticleImageControllerService"
                ],
                "summary": "Creates a articleimage.",
                "operationId": "createArticleImage",
                "parameters": [
                    {
                        "name": "article_id",
                        "in": "query",
                        "description": "Article Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "img": {
                                        "description": "Image",
                                        "type": "file",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "ArticleImage has been created successfully."
                    },
                    "default": {
                        "description": "Unable to create the articleimage."
                    }
                }
            }
        },
        "/api/articleimage/{uid}": {
            "delete": {
                "tags": [
                    "ArticleImageControllerService"
                ],
                "summary": "Set articleimage's 'status' to 0.",
                "operationId": "deleteArticleImageByUid",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "ArticleImage ID, NOT 'ID'.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ArticleImage has been 'deleted' successfully."
                    },
                    "default": {
                        "description": "Unable to 'delete' the articleimage."
                    }
                }
            }
        },
        "/api/blogger": {
            "get": {
                "tags": [
                    "BloggerControllerService"
                ],
                "summary": "Get list of bloggers",
                "description": "Returns list of bloggers",
                "operationId": "getBloggers",
                "parameters": [
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "Page number.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Page size.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved list of bloggers"
                    },
                    "default": {
                        "description": "Unable to retrieve list of bloggers"
                    }
                }
            },
            "post": {
                "tags": [
                    "BloggerControllerService"
                ],
                "summary": "Creates a blogger.",
                "operationId": "createBlogger",
                "parameters": [
                    {
                        "name": "company_id",
                        "in": "query",
                        "description": "Blogger belongs to which company",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Blogger Name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "desc",
                        "in": "query",
                        "description": "Blogger Description",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "Blogger Email",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "companyBelongings",
                        "in": "query",
                        "description": "Is This Blogger Belongs To Company?",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "img": {
                                        "description": "Image",
                                        "type": "file",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Blogger has been created successfully."
                    },
                    "default": {
                        "description": "Unable to create the blogger."
                    }
                }
            }
        },
        "/api/filter/blogger": {
            "get": {
                "tags": [
                    "BloggerControllerService"
                ],
                "summary": "Filter list of bloggers",
                "description": "Returns list of filtered bloggers",
                "operationId": "filterBloggers",
                "parameters": [
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Page size",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "keyword",
                        "in": "query",
                        "description": "Keyword for filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fromdate",
                        "in": "query",
                        "description": "From Date for filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "todate",
                        "in": "query",
                        "description": "To string for filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "status for filter",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved list of filtered bloggers"
                    },
                    "default": {
                        "description": "Unable to retrieve list of bloggers"
                    }
                }
            }
        },
        "/api/blogger/{uid}": {
            "get": {
                "tags": [
                    "BloggerControllerService"
                ],
                "summary": "Retrieves blogger by Uid.",
                "operationId": "getBloggerByUid",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Blogger_ID, NOT 'ID'.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Blogger has been retrieved successfully."
                    },
                    "default": {
                        "description": "Unable to retrieve the blogger."
                    }
                }
            },
            "post": {
                "tags": [
                    "BloggerControllerService"
                ],
                "summary": "Update blogger by Uid.",
                "operationId": "updateBloggerByUid",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Blogger_ID, NOT 'ID'.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "Blogger belongs to which user",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "company_id",
                        "in": "query",
                        "description": "Blogger belongs to which company",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Blogger Name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "desc",
                        "in": "query",
                        "description": "Blogger Description",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "Blogger Email",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "tel1",
                        "in": "query",
                        "description": "Blogger telephone",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "companyBelongings",
                        "in": "query",
                        "description": "Is This Blogger Belongs To Company?",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "_method",
                        "in": "query",
                        "description": "For spoofing purposes.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "PUT"
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "img": {
                                        "description": "Image",
                                        "type": "file",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Blogger has been updated successfully."
                    },
                    "default": {
                        "description": "Unable to update the blogger."
                    }
                }
            },
            "delete": {
                "tags": [
                    "BloggerControllerService"
                ],
                "summary": "Set blogger's 'status' to 0.",
                "operationId": "deleteBloggerByUid",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Blogger ID, NOT 'ID'.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Blogger has been 'deleted' successfully."
                    },
                    "default": {
                        "description": "Unable to 'delete' the blogger."
                    }
                }
            }
        },
        "/api/blogger/{uid}/articles": {
            "get": {
                "tags": [
                    "BloggerControllerService"
                ],
                "summary": "Retrieves blog articles by Uid.",
                "operationId": "getArticlesByBloggerUid",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Blogger ID, NOT 'ID'.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "number of pageSize",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Articles has been retrieved successfully."
                    },
                    "default": {
                        "description": "Unable to retrieved the articles."
                    }
                }
            }
        },
        "/api/category": {
            "get": {
                "tags": [
                    "CategoryControllerService"
                ],
                "summary": "Get list of categories",
                "description": "Returns list of categories",
                "operationId": "getCategories",
                "parameters": [
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "number of pageSize",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved list of categories"
                    },
                    "default": {
                        "description": "Unable to retrieve list of categories"
                    }
                }
            },
            "post": {
                "tags": [
                    "CategoryControllerService"
                ],
                "summary": "Creates a category.",
                "operationId": "createCategory",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Category name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "desc",
                        "in": "query",
                        "description": "Category Description",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category has been created successfully."
                    },
                    "default": {
                        "description": "Unable to create the category."
                    }
                }
            }
        },
        "/api/filter/category": {
            "get": {
                "tags": [
                    "CategoryControllerService"
                ],
                "summary": "Filter list of categories",
                "description": "Returns list of filtered categories",
                "operationId": "filterCategories",
                "parameters": [
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "number of pageSize",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "keyword",
                        "in": "query",
                        "description": "Keyword for filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fromdate",
                        "in": "query",
                        "description": "From Date for filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "todate",
                        "in": "query",
                        "description": "To date for filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "status for filter",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved list of filtered categories"
                    },
                    "default": {
                        "description": "Unable to retrieve list of categories"
                    }
                }
            }
        },
        "/api/category/{uid}": {
            "get": {
                "tags": [
                    "CategoryControllerService"
                ],
                "summary": "Retrieves category by Uid.",
                "operationId": "getCategoryByUid",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Category_ID, NOT 'ID'.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category has been retrieved successfully."
                    },
                    "default": {
                        "description": "Unable to retrieve the category."
                    }
                }
            },
            "put": {
                "tags": [
                    "CategoryControllerService"
                ],
                "summary": "Update category by Uid.",
                "operationId": "updateCategoryByUid",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Category_ID, NOT 'ID'.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Category name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "desc",
                        "in": "query",
                        "description": "Category Description",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ticketids",
                        "in": "query",
                        "description": "Ticket Ids",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category has been updated successfully."
                    },
                    "default": {
                        "description": "Unable to update the category."
                    }
                }
            },
            "delete": {
                "tags": [
                    "CategoryControllerService"
                ],
                "summary": "Set category's 'status' to 0.",
                "operationId": "deleteCategoryByUid",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Category ID, NOT 'ID'.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category has been 'deleted' successfully."
                    },
                    "default": {
                        "description": "Unable to 'delete' the category."
                    }
                }
            }
        },
        "/api/channel": {
            "get": {
                "tags": [
                    "ChannelControllerService"
                ],
                "summary": "Get list of channels",
                "description": "Returns list of channels",
                "operationId": "getChannels",
                "parameters": [
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "Page number.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Page size.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved list of channels"
                    },
                    "default": {
                        "description": "Unable to retrieve list of channels"
                    }
                }
            },
            "post": {
                "tags": [
                    "ChannelControllerService"
                ],
                "summary": "Creates a channel.",
                "operationId": "createChannel",
                "parameters": [
                    {
                        "name": "company_id",
                        "in": "query",
                        "description": "Channel belongs to which company",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Channel Name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "desc",
                        "in": "query",
                        "description": "Channel Description",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "Channel Email",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "tel1",
                        "in": "query",
                        "description": "Channel contact",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "companyBelongings",
                        "in": "query",
                        "description": "Is This Channel Belongs To Company?",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "img": {
                                        "description": "Image",
                                        "type": "file",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Channel has been created successfully."
                    },
                    "default": {
                        "description": "Unable to create the channel."
                    }
                }
            }
        },
        "/api/filter/channel": {
            "get": {
                "tags": [
                    "ChannelControllerService"
                ],
                "summary": "Filter list of channels",
                "description": "Returns list of filtered channels",
                "operationId": "filterChannels",
                "parameters": [
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Page size",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "keyword",
                        "in": "query",
                        "description": "Keyword for filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fromdate",
                        "in": "query",
                        "description": "From Date for filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "todate",
                        "in": "query",
                        "description": "To string for filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "status for filter",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved list of filtered channels"
                    },
                    "default": {
                        "description": "Unable to retrieve list of channels"
                    }
                }
            }
        },
        "/api/channel/{uid}": {
            "get": {
                "tags": [
                    "ChannelControllerService"
                ],
                "summary": "Retrieves channel by Uid.",
                "operationId": "getChannelByUid",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Channel_ID, NOT 'ID'.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Channel has been retrieved successfully."
                    },
                    "default": {
                        "description": "Unable to retrieve the channel."
                    }
                }
            },
            "post": {
                "tags": [
                    "ChannelControllerService"
                ],
                "summary": "Update channel by Uid.",
                "operationId": "updateChannelByUid",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Channel_ID, NOT 'ID'.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "Channel belongs to which user",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "company_id",
                        "in": "query",
                        "description": "Channel belongs to which company",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Channel Name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "desc",
                        "in": "query",
                        "description": "Channel Description",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "Channel Email",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "tel1",
                        "in": "query",
                        "description": "Channel telephone",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "companyBelongings",
                        "in": "query",
                        "description": "Is This Channel Belongs To Company?",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "_method",
                        "in": "query",
                        "description": "For spoofing purposes.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "PUT"
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "img": {
                                        "description": "Image",
                                        "type": "file",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Channel has been updated successfully."
                    },
                    "default": {
                        "description": "Unable to update the channel."
                    }
                }
            },
            "delete": {
                "tags": [
                    "ChannelControllerService"
                ],
                "summary": "Set channel's 'status' to 0.",
                "operationId": "deleteChannelByUid",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Channel ID, NOT 'ID'.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Channel has been 'deleted' successfully."
                    },
                    "default": {
                        "description": "Unable to 'delete' the channel."
                    }
                }
            }
        },
        "/api/channel/{uid}/videos": {
            "get": {
                "tags": [
                    "ChannelControllerService"
                ],
                "summary": "Retrieves blog videos by Uid.",
                "operationId": "getVideosByChannelUid",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Channel ID, NOT 'ID'.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "number of pageSize",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Videos has been retrieved successfully."
                    },
                    "default": {
                        "description": "Unable to retrieved the videos."
                    }
                }
            }
        },
        "/api/comment": {
            "get": {
                "tags": [
                    "CommentControllerService"
                ],
                "summary": "Get list of comments",
                "description": "Returns list of comments",
                "operationId": "getComments",
                "parameters": [
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "number of pageSize",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved list of comments"
                    },
                    "default": {
                        "description": "Unable to retrieve list of comments"
                    }
                }
            },
            "post": {
                "tags": [
                    "CommentControllerService"
                ],
                "summary": "Creates a comment.",
                "operationId": "createComment",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Commentname",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "Email",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "description": "Password",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "password_confirmation",
                        "in": "query",
                        "description": "Password Confirmation",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "country",
                        "in": "query",
                        "description": "Country",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Comment has been created successfully."
                    },
                    "default": {
                        "description": "Unable to create the comment."
                    }
                }
            }
        },
        "/api/filter/comment": {
            "get": {
                "tags": [
                    "CommentControllerService"
                ],
                "summary": "Filter list of comments",
                "description": "Returns list of filtered comments",
                "operationId": "filterComments",
                "parameters": [
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "number of pageSize",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "keyword",
                        "in": "query",
                        "description": "Keyword for filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fromdate",
                        "in": "query",
                        "description": "From Date for filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "todate",
                        "in": "query",
                        "description": "To string for filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "status for filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "company_id",
                        "in": "query",
                        "description": "Company id for filter",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved list of filtered comments"
                    },
                    "default": {
                        "description": "Unable to retrieve list of comments"
                    }
                }
            }
        },
        "/api/comment/{uid}": {
            "get": {
                "tags": [
                    "CommentControllerService"
                ],
                "summary": "Retrieves comment by Uid.",
                "operationId": "getCommentByUid",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Comment_ID, NOT 'ID'.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Comment has been retrieved successfully."
                    },
                    "default": {
                        "description": "Unable to retrieve the comment."
                    }
                }
            },
            "put": {
                "tags": [
                    "CommentControllerService"
                ],
                "summary": "Update comment by Uid.",
                "operationId": "updateCommentByUid",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Comment_ID, NOT 'ID'.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Commentname.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "Email.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "tel1",
                        "in": "query",
                        "description": "Telephone Number #1.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "address1",
                        "in": "query",
                        "description": "Address #1.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "city",
                        "in": "query",
                        "description": "City.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "postcode",
                        "in": "query",
                        "description": "PostCode.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "state",
                        "in": "query",
                        "description": "State.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "country",
                        "in": "query",
                        "description": "Country.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "icno",
                        "in": "query",
                        "description": "IC Number.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Comment has been updated successfully."
                    },
                    "default": {
                        "description": "Unable to update the comment."
                    }
                }
            },
            "delete": {
                "tags": [
                    "CommentControllerService"
                ],
                "summary": "Set comment's 'status' to 0.",
                "operationId": "deleteCommentByUid",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Comment ID, NOT 'ID'.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Comment has been 'deleted' successfully."
                    },
                    "default": {
                        "description": "Unable to 'delete' the comment."
                    }
                }
            }
        },
        "/api/company": {
            "get": {
                "tags": [
                    "CompanyControllerService"
                ],
                "summary": "Get list of companies",
                "description": "Returns list of companies",
                "operationId": "getCompanies",
                "parameters": [
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "number of pageSize",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved list of companies"
                    },
                    "default": {
                        "description": "Unable to retrieve list of companies"
                    }
                }
            },
            "post": {
                "tags": [
                    "CompanyControllerService"
                ],
                "summary": "Creates a company.",
                "operationId": "createCompany",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Companyname",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "company_type_id",
                        "in": "query",
                        "description": "Company Type ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "email1",
                        "in": "query",
                        "description": "Email 1",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "email2",
                        "in": "query",
                        "description": "Email 2",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "regno",
                        "in": "query",
                        "description": "Registration No",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "tel1",
                        "in": "query",
                        "description": "Contact No 1",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "tel2",
                        "in": "query",
                        "description": "Contact No 2",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fax1",
                        "in": "query",
                        "description": "Fax",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fax2",
                        "in": "query",
                        "description": "Fax 2",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "address1",
                        "in": "query",
                        "description": "Address",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "address2",
                        "in": "query",
                        "description": "Address 2",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "postcode",
                        "in": "query",
                        "description": "Post Code",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "state",
                        "in": "query",
                        "description": "State",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "city",
                        "in": "query",
                        "description": "City",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Country",
                        "in": "query",
                        "description": "Country",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Company has been created successfully."
                    },
                    "default": {
                        "description": "Unable to create the company."
                    }
                }
            }
        },
        "/api/filter/company": {
            "get": {
                "tags": [
                    "CompanyControllerService"
                ],
                "summary": "Filter list of companies",
                "description": "Returns list of filtered companies",
                "operationId": "filterCompanies",
                "parameters": [
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "number of pageSize",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "keyword",
                        "in": "query",
                        "description": "Keyword for filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fromdate",
                        "in": "query",
                        "description": "From Date for filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "todate",
                        "in": "query",
                        "description": "To string for filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "status for filter",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved list of filtered companies"
                    },
                    "default": {
                        "description": "Unable to retrieve list of companies"
                    }
                }
            }
        },
        "/api/company/{uid}": {
            "get": {
                "tags": [
                    "CompanyControllerService"
                ],
                "summary": "Retrieves company by Uid.",
                "operationId": "getCompanyByUid",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Company_ID, NOT 'ID'.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Company has been retrieved successfully."
                    },
                    "default": {
                        "description": "Unable to retrieve the company."
                    }
                }
            },
            "put": {
                "tags": [
                    "CompanyControllerService"
                ],
                "summary": "Update company by Uid.",
                "operationId": "updateCompanyByUid",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Company_ID, NOT 'ID'.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Companyname",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "company_type_id",
                        "in": "query",
                        "description": "Company Type ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "email1",
                        "in": "query",
                        "description": "Email 1",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "email2",
                        "in": "query",
                        "description": "Email 2",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "regno",
                        "in": "query",
                        "description": "Registration No",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "tel1",
                        "in": "query",
                        "description": "Contact No 1",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "tel2",
                        "in": "query",
                        "description": "Contact No 2",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fax1",
                        "in": "query",
                        "description": "Fax",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fax2",
                        "in": "query",
                        "description": "Fax 2",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "address1",
                        "in": "query",
                        "description": "Address",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "address2",
                        "in": "query",
                        "description": "Address 2",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "postcode",
                        "in": "query",
                        "description": "Post Code",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "state",
                        "in": "query",
                        "description": "State",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "city",
                        "in": "query",
                        "description": "City",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Country",
                        "in": "query",
                        "description": "Country",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Company has been updated successfully."
                    },
                    "default": {
                        "description": "Unable to update the company."
                    }
                }
            },
            "delete": {
                "tags": [
                    "CompanyControllerService"
                ],
                "summary": "Set company's 'status' to 0.",
                "operationId": "deleteCompanyByUid",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Company ID, NOT 'ID'.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Company has been 'deleted' successfully."
                    },
                    "default": {
                        "description": "Unable to 'delete' the company."
                    }
                }
            }
        },
        "/api/companytype": {
            "get": {
                "tags": [
                    "CompanyTypeControllerService"
                ],
                "summary": "Get list of companytypes",
                "description": "Returns list of companytypes",
                "operationId": "getCompanyTypes",
                "parameters": [
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "number of pageSize",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved list of companytypes"
                    },
                    "default": {
                        "description": "Unable to retrieve list of companytypes"
                    }
                }
            },
            "post": {
                "tags": [
                    "CompanyTypeControllerService"
                ],
                "summary": "Creates a companytype.",
                "operationId": "createCompanyType",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "CompanyType Name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "desc",
                        "in": "query",
                        "description": "CompanyType Description",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CompanyType has been created successfully."
                    },
                    "default": {
                        "description": "Unable to create the companytype."
                    }
                }
            }
        },
        "/api/filter/companytype": {
            "get": {
                "tags": [
                    "CompanyTypeControllerService"
                ],
                "summary": "Filter list of companytypes",
                "description": "Returns list of filtered companytypes",
                "operationId": "filterCompanyTypes",
                "parameters": [
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "number of pageSize",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "keyword",
                        "in": "query",
                        "description": "Keyword for filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fromdate",
                        "in": "query",
                        "description": "From Date for filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "todate",
                        "in": "query",
                        "description": "To string for filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "status for filter",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved list of filtered companytypes"
                    },
                    "default": {
                        "description": "Unable to retrieve list of companytypes"
                    }
                }
            }
        },
        "/api/companytype/{uid}": {
            "get": {
                "tags": [
                    "CompanyTypeControllerService"
                ],
                "summary": "Retrieves companytype by Uid.",
                "operationId": "getCompanyTypeByUid",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "CompanyType_ID, NOT 'ID'.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CompanyType has been retrieved successfully."
                    },
                    "default": {
                        "description": "Unable to retrieve the companytype."
                    }
                }
            },
            "put": {
                "tags": [
                    "CompanyTypeControllerService"
                ],
                "summary": "Update companytype by Uid.",
                "operationId": "updateCompanyTypeByUid",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "CompanyType_ID, NOT 'ID'.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "CompanyTypename",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "desc",
                        "in": "query",
                        "description": "CompanyType Description",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CompanyType has been updated successfully."
                    },
                    "default": {
                        "description": "Unable to update the companytype."
                    }
                }
            },
            "delete": {
                "tags": [
                    "CompanyTypeControllerService"
                ],
                "summary": "Set companytype's 'status' to 0.",
                "operationId": "deleteCompanyTypeByUid",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "CompanyType ID, NOT 'ID'.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CompanyType has been 'deleted' successfully."
                    },
                    "default": {
                        "description": "Unable to 'delete' the companytype."
                    }
                }
            }
        },
        "/api/group": {
            "get": {
                "tags": [
                    "GroupControllerService"
                ],
                "summary": "Get list of groups",
                "description": "Returns list of groups",
                "operationId": "getGroups",
                "parameters": [
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "number of pageSize",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved list of groups"
                    },
                    "default": {
                        "description": "Unable to retrieve list of groups"
                    }
                }
            },
            "post": {
                "tags": [
                    "GroupControllerService"
                ],
                "summary": "Creates a group.",
                "operationId": "createGroup",
                "parameters": [
                    {
                        "name": "company_id",
                        "in": "query",
                        "description": "Group belongs to which company",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Group Name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "desc",
                        "in": "query",
                        "description": "Group Description",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Group has been created successfully."
                    },
                    "default": {
                        "description": "Unable to create the group."
                    }
                }
            }
        },
        "/api/filter/group": {
            "get": {
                "tags": [
                    "GroupControllerService"
                ],
                "summary": "Filter list of groups",
                "description": "Returns list of filtered groups",
                "operationId": "filterGroups",
                "parameters": [
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "number of pageSize",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "keyword",
                        "in": "query",
                        "description": "Keyword for filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fromdate",
                        "in": "query",
                        "description": "From Date for filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "todate",
                        "in": "query",
                        "description": "To string for filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "status for filter",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved list of filtered groups"
                    },
                    "default": {
                        "description": "Unable to retrieve list of groups"
                    }
                }
            }
        },
        "/api/group/{uid}": {
            "get": {
                "tags": [
                    "GroupControllerService"
                ],
                "summary": "Retrieves group by Uid.",
                "operationId": "getGroupByUid",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Group_ID, NOT 'ID'.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Group has been retrieved successfully."
                    },
                    "default": {
                        "description": "Unable to retrieve the group."
                    }
                }
            },
            "put": {
                "tags": [
                    "GroupControllerService"
                ],
                "summary": "Update group by Uid.",
                "operationId": "updateGroupByUid",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Group_ID, NOT 'ID'.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "company_id",
                        "in": "query",
                        "description": "Group belongs to which company",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Groupname",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "desc",
                        "in": "query",
                        "description": "Group Description",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Group has been updated successfully."
                    },
                    "default": {
                        "description": "Unable to update the group."
                    }
                }
            },
            "delete": {
                "tags": [
                    "GroupControllerService"
                ],
                "summary": "Set group's 'status' to 0.",
                "operationId": "deleteGroupByUid",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Group ID, NOT 'ID'.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Group has been 'deleted' successfully."
                    },
                    "default": {
                        "description": "Unable to 'delete' the group."
                    }
                }
            }
        },
        "/api/inventory": {
            "get": {
                "tags": [
                    "InventoryControllerService"
                ],
                "summary": "Get list of inventories",
                "description": "Returns list of inventories",
                "operationId": "getInventories",
                "parameters": [
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "number of pageSize",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved list of inventories"
                    },
                    "default": {
                        "description": "Unable to retrieve list of inventories"
                    }
                }
            },
            "post": {
                "tags": [
                    "InventoryControllerService"
                ],
                "summary": "Creates a inventory.",
                "operationId": "createInventory",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Inventoryname",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "store_id",
                        "in": "query",
                        "description": "Store ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "product_promotion_id",
                        "in": "query",
                        "description": "Promotion ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "warranty_id",
                        "in": "query",
                        "description": "Warranty ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "shipping_id",
                        "in": "query",
                        "description": "Shipping ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "inventoryfamilies",
                        "in": "query",
                        "description": "Inventory Families",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "code",
                        "in": "query",
                        "description": "Code",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sku",
                        "in": "query",
                        "description": "Sku",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "desc",
                        "in": "query",
                        "description": "Product Description",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cost",
                        "in": "query",
                        "description": "Product Cost",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "price",
                        "in": "query",
                        "description": "Product Base Price",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "stockthreshold",
                        "in": "query",
                        "description": "Stock Threshold",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "img": {
                                        "description": "Image",
                                        "type": "file",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    },
                                    "sliders[]": {
                                        "description": "Sliders Image",
                                        "type": "file",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Inventory has been created successfully."
                    },
                    "default": {
                        "description": "Unable to create the inventory."
                    }
                }
            }
        },
        "/api/filter/inventory": {
            "get": {
                "tags": [
                    "InventoryControllerService"
                ],
                "summary": "Filter list of inventories",
                "description": "Returns list of filtered inventories",
                "operationId": "filterInventories",
                "parameters": [
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "number of pageSize",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "keyword",
                        "in": "query",
                        "description": "Keyword for filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fromdate",
                        "in": "query",
                        "description": "From Date for filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "todate",
                        "in": "query",
                        "description": "To date for filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "onsale",
                        "in": "query",
                        "description": "On sale for filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "status for filter",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved list of filtered inventories"
                    },
                    "default": {
                        "description": "Unable to retrieve list of inventories"
                    }
                }
            }
        },
        "/api/inventory/{uid}": {
            "get": {
                "tags": [
                    "InventoryControllerService"
                ],
                "summary": "Retrieves inventory by Uid.",
                "operationId": "getInventoryByUid",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Inventory_ID, NOT 'ID'.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Inventory has been retrieved successfully."
                    },
                    "default": {
                        "description": "Unable to retrieve the inventory."
                    }
                }
            },
            "put": {
                "tags": [
                    "InventoryControllerService"
                ],
                "summary": "Update inventory by Uid.",
                "operationId": "updateInventoryByUid",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Inventory_ID, NOT 'ID'.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Inventoryname",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "store_id",
                        "in": "query",
                        "description": "Store ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "product_promotion_id",
                        "in": "query",
                        "description": "Promotion ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "warranty_id",
                        "in": "query",
                        "description": "Warranty ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "shipping_id",
                        "in": "query",
                        "description": "Shipping ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "inventoryfamilies",
                        "in": "query",
                        "description": "Inventory Families",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "code",
                        "in": "query",
                        "description": "Code",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sku",
                        "in": "query",
                        "description": "Sku",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "desc",
                        "in": "query",
                        "description": "Product Description",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cost",
                        "in": "query",
                        "description": "Product Cost",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "price",
                        "in": "query",
                        "description": "Product Selling Price",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "qty",
                        "in": "query",
                        "description": "Stock Qty",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "stockthreshold",
                        "in": "query",
                        "description": "Stock Threshold",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "onsale",
                        "in": "query",
                        "description": "On Sale",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Inventory has been created successfully."
                    },
                    "default": {
                        "description": "Unable to create the inventory."
                    }
                }
            },
            "delete": {
                "tags": [
                    "InventoryControllerService"
                ],
                "summary": "Set inventory's 'status' to 0.",
                "operationId": "deleteInventoryByUid",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Inventory ID, NOT 'ID'.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Inventory has been 'deleted' successfully."
                    },
                    "default": {
                        "description": "Unable to 'delete' the inventory."
                    }
                }
            }
        },
        "/api/inventory/{uid}/onsale": {
            "get": {
                "tags": [
                    "InventoryControllerService"
                ],
                "summary": "Retrieves onsale inventory by Uid.",
                "operationId": "getOnSaleInventoryByUid",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Inventory_ID, NOT 'ID'.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Inventory has been retrieved successfully."
                    },
                    "default": {
                        "description": "Unable to retrieve the inventory."
                    }
                }
            }
        },
        "/api/inventories/onsale/filter": {
            "get": {
                "tags": [
                    "InventoryControllerService"
                ],
                "summary": "Filter onsale inventories.",
                "operationId": "filterOnSaleInventories",
                "parameters": [
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "number of pageSize",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "keyword",
                        "in": "query",
                        "description": "Keyword for filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fromdate",
                        "in": "query",
                        "description": "From Date for filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "todate",
                        "in": "query",
                        "description": "To string for filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "status for filter",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Inventory has been retrieved successfully."
                    },
                    "default": {
                        "description": "Unable to retrieve the inventory."
                    }
                }
            }
        },
        "/api/thumbnailupload/inventory": {
            "post": {
                "tags": [
                    "InventoryControllerService"
                ],
                "summary": "Change inventory Thumbnail by Uid.",
                "operationId": "uploadInventoryThumbnail",
                "parameters": [
                    {
                        "name": "inventory_id",
                        "in": "query",
                        "description": "Inventory Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "img": {
                                        "description": "Image",
                                        "type": "file",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Inventory has been retrieved successfully."
                    },
                    "default": {
                        "description": "Unable to retrieve the inventory."
                    }
                }
            }
        },
        "/api/inventoryimage": {
            "post": {
                "tags": [
                    "InventoryImageControllerService"
                ],
                "summary": "Creates a inventoryimage.",
                "operationId": "createInventoryImage",
                "parameters": [
                    {
                        "name": "inventory_id",
                        "in": "query",
                        "description": "Inventory Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "img": {
                                        "description": "Image",
                                        "type": "file",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "InventoryImage has been created successfully."
                    },
                    "default": {
                        "description": "Unable to create the inventoryimage."
                    }
                }
            }
        },
        "/api/inventoryimage/{uid}": {
            "delete": {
                "tags": [
                    "InventoryImageControllerService"
                ],
                "summary": "Set inventoryimage's 'status' to 0.",
                "operationId": "deleteInventoryImageByUid",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "InventoryImage ID, NOT 'ID'.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "InventoryImage has been 'deleted' successfully."
                    },
                    "default": {
                        "description": "Unable to 'delete' the inventoryimage."
                    }
                }
            }
        },
        "/api/module": {
            "get": {
                "tags": [
                    "ModuleControllerService"
                ],
                "summary": "Get list of modules",
                "description": "Returns list of modules",
                "operationId": "getModules",
                "parameters": [
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "number of pageSize",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved list of modules"
                    },
                    "default": {
                        "description": "Unable to retrieve list of modules"
                    }
                }
            },
            "post": {
                "tags": [
                    "ModuleControllerService"
                ],
                "summary": "Creates a module.",
                "operationId": "createModule",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Module Name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "desc",
                        "in": "query",
                        "description": "Module Description",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "provider",
                        "in": "query",
                        "description": "Provider of Model",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Module has been created successfully."
                    },
                    "default": {
                        "description": "Unable to create the module."
                    }
                }
            }
        },
        "/api/filter/module": {
            "get": {
                "tags": [
                    "ModuleControllerService"
                ],
                "summary": "Filter list of modules",
                "description": "Returns list of filtered modules",
                "operationId": "filterModules",
                "parameters": [
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "number of pageSize",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "keyword",
                        "in": "query",
                        "description": "Keyword for filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fromdate",
                        "in": "query",
                        "description": "From Date for filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "todate",
                        "in": "query",
                        "description": "To date for filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "status for filter",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved list of filtered modules"
                    },
                    "default": {
                        "description": "Unable to retrieve list of modules"
                    }
                }
            }
        },
        "/api/module/{uid}": {
            "get": {
                "tags": [
                    "ModuleControllerService"
                ],
                "summary": "Retrieves module by Uid.",
                "operationId": "getModuleByUid",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Module_ID, NOT 'ID'.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Module has been retrieved successfully."
                    },
                    "default": {
                        "description": "Unable to retrieve the module."
                    }
                }
            },
            "put": {
                "tags": [
                    "ModuleControllerService"
                ],
                "summary": "Update module by Uid.",
                "operationId": "updateModuleByUid",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Module_ID, NOT 'ID'.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Modulename",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "desc",
                        "in": "query",
                        "description": "Module Description",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "provider",
                        "in": "query",
                        "description": "Provider of Model",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Module has been updated successfully."
                    },
                    "default": {
                        "description": "Unable to update the module."
                    }
                }
            },
            "delete": {
                "tags": [
                    "ModuleControllerService"
                ],
                "summary": "Set module's 'status' to 0.",
                "operationId": "deleteModuleByUid",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Module ID, NOT 'ID'.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Module has been 'deleted' successfully."
                    },
                    "default": {
                        "description": "Unable to 'delete' the module."
                    }
                }
            }
        },
        "/api/payment": {
            "get": {
                "tags": [
                    "PaymentControllerService"
                ],
                "summary": "Get list of payments",
                "description": "Returns list of payments",
                "operationId": "getPayments",
                "parameters": [
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "number of pageSize",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved list of payments"
                    },
                    "default": {
                        "description": "Unable to retrieve list of payments"
                    }
                }
            },
            "post": {
                "tags": [
                    "PaymentControllerService"
                ],
                "summary": "Creates a payment.",
                "operationId": "createPayment",
                "parameters": [
                    {
                        "name": "selectedstores",
                        "in": "query",
                        "description": "Involved Store",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payment has been created successfully."
                    },
                    "default": {
                        "description": "Unable to create the payment."
                    }
                }
            }
        },
        "/api/filter/payment": {
            "get": {
                "tags": [
                    "PaymentControllerService"
                ],
                "summary": "Filter list of payments",
                "description": "Returns list of filtered payments",
                "operationId": "filterPayments",
                "parameters": [
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "number of pageSize",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "keyword",
                        "in": "query",
                        "description": "Keyword for filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fromdate",
                        "in": "query",
                        "description": "From Date for filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "todate",
                        "in": "query",
                        "description": "To date for filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "onsale",
                        "in": "query",
                        "description": "On sale for filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "status for filter",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved list of filtered payments"
                    },
                    "default": {
                        "description": "Unable to retrieve list of payments"
                    }
                }
            }
        },
        "/api/payment/{uid}": {
            "get": {
                "tags": [
                    "PaymentControllerService"
                ],
                "summary": "Retrieves payment by Uid.",
                "operationId": "getPaymentByUid",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Payment_ID, NOT 'ID'.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payment has been retrieved successfully."
                    },
                    "default": {
                        "description": "Unable to retrieve the payment."
                    }
                }
            },
            "post": {
                "tags": [
                    "PaymentControllerService"
                ],
                "summary": "Update payment by Uid.",
                "operationId": "updatePaymentByUid",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Payment_ID, NOT 'ID'.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Paymentname",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "store_id",
                        "in": "query",
                        "description": "Store ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "product_promotion_id",
                        "in": "query",
                        "description": "Promotion ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "warranty_id",
                        "in": "query",
                        "description": "Warranty ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "shipping_id",
                        "in": "query",
                        "description": "Shipping ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "paymentfamilies",
                        "in": "query",
                        "description": "Payment Families",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "code",
                        "in": "query",
                        "description": "Code",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sku",
                        "in": "query",
                        "description": "Sku",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "desc",
                        "in": "query",
                        "description": "Product Description",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cost",
                        "in": "query",
                        "description": "Product Cost",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "price",
                        "in": "query",
                        "description": "Product Selling Price",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "qty",
                        "in": "query",
                        "description": "Stock Qty",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "stockthreshold",
                        "in": "query",
                        "description": "Stock Threshold",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "onsale",
                        "in": "query",
                        "description": "On Sale",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "_method",
                        "in": "query",
                        "description": "For spoofing purposes.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "PUT"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "img": {
                                        "description": "Image",
                                        "type": "file",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Payment has been created successfully."
                    },
                    "default": {
                        "description": "Unable to create the payment."
                    }
                }
            },
            "delete": {
                "tags": [
                    "PaymentControllerService"
                ],
                "summary": "Set payment's 'status' to 0.",
                "operationId": "deletePaymentByUid",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Payment ID, NOT 'ID'.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payment has been 'deleted' successfully."
                    },
                    "default": {
                        "description": "Unable to 'delete' the payment."
                    }
                }
            }
        },
        "/api/inventorypayment": {
            "post": {
                "tags": [
                    "PaymentControllerService"
                ],
                "summary": "Creates an inventory payment.",
                "operationId": "createInventoryPayment",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "Stripe token id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "Email",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "contact",
                        "in": "query",
                        "description": "Contact Person",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "selectedstores",
                        "in": "query",
                        "description": "Involved Store",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "User Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payment has been created successfully."
                    },
                    "default": {
                        "description": "Unable to create the payment."
                    }
                }
            }
        },
        "/api/videopayment": {
            "post": {
                "tags": [
                    "PaymentControllerService"
                ],
                "summary": "Creates a video payment.",
                "operationId": "createVideoPayment",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "Stripe token id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "Email",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "video_id",
                        "in": "query",
                        "description": "Involved video",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "User Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payment has been created successfully."
                    },
                    "default": {
                        "description": "Unable to create the payment."
                    }
                }
            }
        },
        "/api/testpayment": {
            "post": {
                "tags": [
                    "PaymentControllerService"
                ],
                "summary": "Creates a test payment.",
                "operationId": "createTestPayment",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "Stripe token id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "Email",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payment has been created successfully."
                    },
                    "default": {
                        "description": "Unable to create the payment."
                    }
                }
            }
        },
        "/api/productfeature": {
            "get": {
                "tags": [
                    "ProductFeatureControllerService"
                ],
                "summary": "Get list of productfeatures",
                "description": "Returns list of productfeatures",
                "operationId": "getProductFeatures",
                "parameters": [
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "number of pageSize",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved list of productfeatures"
                    },
                    "default": {
                        "description": "Unable to retrieve list of productfeatures"
                    }
                }
            },
            "post": {
                "tags": [
                    "ProductFeatureControllerService"
                ],
                "summary": "Creates a productfeature.",
                "operationId": "createProductFeature",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "ProductFeature name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "desc",
                        "in": "query",
                        "description": "ProductFeature Description",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "icon",
                        "in": "query",
                        "description": "ProductFeature icon",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "imgpath",
                        "in": "query",
                        "description": "ProductFeature image path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ProductFeature has been created successfully."
                    },
                    "default": {
                        "description": "Unable to create the productfeature."
                    }
                }
            }
        },
        "/api/filter/productfeature": {
            "get": {
                "tags": [
                    "ProductFeatureControllerService"
                ],
                "summary": "Filter list of productfeatures",
                "description": "Returns list of filtered productfeatures",
                "operationId": "filterProductFeatures",
                "parameters": [
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "number of pageSize",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "keyword",
                        "in": "query",
                        "description": "Keyword for filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fromdate",
                        "in": "query",
                        "description": "From Date for filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "todate",
                        "in": "query",
                        "description": "To date for filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "status for filter",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved list of filtered productfeatures"
                    },
                    "default": {
                        "description": "Unable to retrieve list of productfeatures"
                    }
                }
            }
        },
        "/api/productfeature/{uid}": {
            "get": {
                "tags": [
                    "ProductFeatureControllerService"
                ],
                "summary": "Retrieves productfeature by Uid.",
                "operationId": "getProductFeatureByUid",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "ProductFeature_ID, NOT 'ID'.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ProductFeature has been retrieved successfully."
                    },
                    "default": {
                        "description": "Unable to retrieve the productfeature."
                    }
                }
            },
            "put": {
                "tags": [
                    "ProductFeatureControllerService"
                ],
                "summary": "Update productfeature by Uid.",
                "operationId": "updateProductFeatureByUid",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "ProductFeature_ID, NOT 'ID'.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "ProductFeature name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "desc",
                        "in": "query",
                        "description": "ProductFeature Description",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "icon",
                        "in": "query",
                        "description": "ProductFeature icon",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "imgpath",
                        "in": "query",
                        "description": "ProductFeature image path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ProductFeature has been updated successfully."
                    },
                    "default": {
                        "description": "Unable to update the productfeature."
                    }
                }
            },
            "delete": {
                "tags": [
                    "ProductFeatureControllerService"
                ],
                "summary": "Set productfeature's 'status' to 0.",
                "operationId": "deleteProductFeatureByUid",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "ProductFeature ID, NOT 'ID'.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ProductFeature has been 'deleted' successfully."
                    },
                    "default": {
                        "description": "Unable to 'delete' the productfeature."
                    }
                }
            }
        },
        "/api/productfeature/{uid}/products": {
            "get": {
                "tags": [
                    "ProductFeatureControllerService"
                ],
                "summary": "Get list of featured products",
                "description": "Returns list of featured products",
                "operationId": "getFeaturedProductListByUid",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "ProductFeature ID, NOT 'ID'.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "number of pageSize",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved list of productfeatures"
                    },
                    "default": {
                        "description": "Unable to retrieve list of productfeatures"
                    }
                }
            }
        },
        "/api/productpromotion": {
            "get": {
                "tags": [
                    "ProductPromotionControllerService"
                ],
                "summary": "Get list of productpromotions",
                "description": "Returns list of productpromotions",
                "operationId": "getProductPromotions",
                "parameters": [
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "number of pageSize",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved list of productpromotions"
                    },
                    "default": {
                        "description": "Unable to retrieve list of productpromotions"
                    }
                }
            },
            "post": {
                "tags": [
                    "ProductPromotionControllerService"
                ],
                "summary": "Creates a productpromotion.",
                "operationId": "createProductPromotion",
                "parameters": [
                    {
                        "name": "store_id",
                        "in": "query",
                        "description": "Store ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "ProductPromotionname",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "desc",
                        "in": "query",
                        "description": "Promotion description",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "qty",
                        "in": "query",
                        "description": "Limited Qty",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "disc",
                        "in": "query",
                        "description": "Promotion Discount",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "discpctg",
                        "in": "query",
                        "description": "Promotion Discount Percentage",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "discbyprice",
                        "in": "query",
                        "description": "Promotion discount by price",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "promostartdate",
                        "in": "query",
                        "description": "Promotion Start Date",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "promoenddate",
                        "in": "query",
                        "description": "Promotion End Date",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ProductPromotion has been created successfully."
                    },
                    "default": {
                        "description": "Unable to create the productpromotion."
                    }
                }
            }
        },
        "/api/filter/productpromotion": {
            "get": {
                "tags": [
                    "ProductPromotionControllerService"
                ],
                "summary": "Filter list of productpromotions",
                "description": "Returns list of filtered productpromotions",
                "operationId": "filterProductPromotions",
                "parameters": [
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "number of pageSize",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "keyword",
                        "in": "query",
                        "description": "Keyword for filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fromdate",
                        "in": "query",
                        "description": "From Date for filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "todate",
                        "in": "query",
                        "description": "To date for filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "status for filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "store_id",
                        "in": "query",
                        "description": "store id for filter",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved list of filtered productpromotions"
                    },
                    "default": {
                        "description": "Unable to retrieve list of productpromotions"
                    }
                }
            }
        },
        "/api/productpromotion/{uid}": {
            "get": {
                "tags": [
                    "ProductPromotionControllerService"
                ],
                "summary": "Retrieves productpromotion by ProductPromotion's uid.",
                "operationId": "getProductPromotionByUid",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "ProductPromotion's uid, NOT 'id'.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ProductPromotion has been retrieved successfully."
                    },
                    "default": {
                        "description": "Unable to retrieve the productpromotion."
                    }
                }
            },
            "put": {
                "tags": [
                    "ProductPromotionControllerService"
                ],
                "summary": "Update productpromotion by Uid.",
                "operationId": "updateProductPromotionByUid",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "ProductPromotion_ID, NOT 'ID'.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "ProductPromotionname",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "store_id",
                        "in": "query",
                        "description": "Store ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "desc",
                        "in": "query",
                        "description": "Promotion description",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "qty",
                        "in": "query",
                        "description": "Limited Qty",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "disc",
                        "in": "query",
                        "description": "Promotion Discount",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "discpctg",
                        "in": "query",
                        "description": "Promotion Discount Percentage",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "discbyprice",
                        "in": "query",
                        "description": "Promotion discount by price",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "promostartdate",
                        "in": "query",
                        "description": "Promotion Start Date",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "promoenddate",
                        "in": "query",
                        "description": "Promotion End Date",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ProductPromotion has been created successfully."
                    },
                    "default": {
                        "description": "Unable to create the productpromotion."
                    }
                }
            },
            "delete": {
                "tags": [
                    "ProductPromotionControllerService"
                ],
                "summary": "Set productpromotion's 'status' to 0.",
                "operationId": "deleteProductPromotionByUid",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "ProductPromotion ID, NOT 'ID'.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ProductPromotion has been 'deleted' successfully."
                    },
                    "default": {
                        "description": "Unable to 'delete' the productpromotion."
                    }
                }
            }
        },
        "/api/productreview": {
            "get": {
                "tags": [
                    "ProductReviewControllerService"
                ],
                "summary": "Get list of productreviews",
                "description": "Returns list of productreviews",
                "operationId": "getProductReviews",
                "parameters": [
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "number of pageSize",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved list of productreviews"
                    },
                    "default": {
                        "description": "Unable to retrieve list of productreviews"
                    }
                }
            },
            "post": {
                "tags": [
                    "ProductReviewControllerService"
                ],
                "summary": "Creates a productreview.",
                "operationId": "createProductReview",
                "parameters": [
                    {
                        "name": "title",
                        "in": "query",
                        "description": "ProductReview title",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "inventory_id",
                        "in": "query",
                        "description": "Inventory ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "ticket_id",
                        "in": "query",
                        "description": "Ticket ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "desc",
                        "in": "query",
                        "description": "Review description",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Review type",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "rating",
                        "in": "query",
                        "description": "Review rating",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "img": {
                                        "description": "Image",
                                        "type": "file",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "ProductReview has been created successfully."
                    },
                    "default": {
                        "description": "Unable to create the productreview."
                    }
                }
            }
        },
        "/api/filter/productreview": {
            "get": {
                "tags": [
                    "ProductReviewControllerService"
                ],
                "summary": "Filter list of productreviews",
                "description": "Returns list of filtered productreviews",
                "operationId": "filterProductReviews",
                "parameters": [
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "number of pageSize",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "keyword",
                        "in": "query",
                        "description": "Keyword for filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fromdate",
                        "in": "query",
                        "description": "From Date for filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "todate",
                        "in": "query",
                        "description": "To date for filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "status for filter",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved list of filtered productreviews"
                    },
                    "default": {
                        "description": "Unable to retrieve list of productreviews"
                    }
                }
            }
        },
        "/api/productreview/{uid}": {
            "get": {
                "tags": [
                    "ProductReviewControllerService"
                ],
                "summary": "Retrieves productreview by Uid.",
                "operationId": "getProductReviewByUid",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "ProductReview_ID, NOT 'ID'.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ProductReview has been retrieved successfully."
                    },
                    "default": {
                        "description": "Unable to retrieve the productreview."
                    }
                }
            },
            "put": {
                "tags": [
                    "ProductReviewControllerService"
                ],
                "summary": "Update productreview by Uid.",
                "operationId": "updateProductReviewByUid",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "ProductReview_ID, NOT 'ID'.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "title",
                        "in": "query",
                        "description": "ProductReview title",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "inventory_id",
                        "in": "query",
                        "description": "Inventory ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "ticket_id",
                        "in": "query",
                        "description": "Ticket ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "desc",
                        "in": "query",
                        "description": "Review description",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Review type",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "rating",
                        "in": "query",
                        "description": "Review rating",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "img": {
                                        "description": "Image",
                                        "type": "file",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "ProductReview has been created successfully."
                    },
                    "default": {
                        "description": "Unable to create the productreview."
                    }
                }
            },
            "delete": {
                "tags": [
                    "ProductReviewControllerService"
                ],
                "summary": "Set productreview's 'status' to 0.",
                "operationId": "deleteProductReviewByUid",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "ProductReview ID, NOT 'ID'.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ProductReview has been 'deleted' successfully."
                    },
                    "default": {
                        "description": "Unable to 'delete' the productreview."
                    }
                }
            }
        },
        "/api/role": {
            "get": {
                "tags": [
                    "RoleControllerService"
                ],
                "summary": "Get list of roles",
                "description": "Returns list of roles",
                "operationId": "getRoles",
                "parameters": [
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "number of pageSize",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved list of roles"
                    },
                    "default": {
                        "description": "Unable to retrieve list of roles"
                    }
                }
            },
            "post": {
                "tags": [
                    "RoleControllerService"
                ],
                "summary": "Creates a role.",
                "operationId": "createRole",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Role Name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "desc",
                        "in": "query",
                        "description": "Role Description",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Role has been created successfully."
                    },
                    "default": {
                        "description": "Unable to create the role."
                    }
                }
            }
        },
        "/api/filter/role": {
            "get": {
                "tags": [
                    "RoleControllerService"
                ],
                "summary": "Filter list of roles",
                "description": "Returns list of filtered roles",
                "operationId": "filterRoles",
                "parameters": [
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "number of pageSize",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "keyword",
                        "in": "query",
                        "description": "Keyword for filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fromdate",
                        "in": "query",
                        "description": "From Date for filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "todate",
                        "in": "query",
                        "description": "To date for filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "status for filter",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved list of filtered roles"
                    },
                    "default": {
                        "description": "Unable to retrieve list of roles"
                    }
                }
            }
        },
        "/api/role/{uid}": {
            "get": {
                "tags": [
                    "RoleControllerService"
                ],
                "summary": "Retrieves role by Uid.",
                "operationId": "getRoleByUid",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Role_ID, NOT 'ID'.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Role has been retrieved successfully."
                    },
                    "default": {
                        "description": "Unable to retrieve the role."
                    }
                }
            },
            "put": {
                "tags": [
                    "RoleControllerService"
                ],
                "summary": "Update role by Uid.",
                "operationId": "updateRoleByUid",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Role_ID, NOT 'ID'.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Rolename",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "desc",
                        "in": "query",
                        "description": "Role Description",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Role has been updated successfully."
                    },
                    "default": {
                        "description": "Unable to update the role."
                    }
                }
            },
            "delete": {
                "tags": [
                    "RoleControllerService"
                ],
                "summary": "Set role's 'status' to 0.",
                "operationId": "deleteRoleByUid",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Role ID, NOT 'ID'.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Role has been 'deleted' successfully."
                    },
                    "default": {
                        "description": "Unable to 'delete' the role."
                    }
                }
            }
        },
        "/api/sale": {
            "get": {
                "tags": [
                    "SaleControllerService"
                ],
                "summary": "Get list of sales",
                "description": "Returns list of sales",
                "operationId": "getSales",
                "parameters": [
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "number of pageSize",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved list of sales"
                    },
                    "default": {
                        "description": "Unable to retrieve list of sales"
                    }
                }
            },
            "post": {
                "tags": [
                    "SaleControllerService"
                ],
                "summary": "Creates a sale.",
                "operationId": "createSale",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Salename",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "storeid",
                        "in": "query",
                        "description": "Store ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "code",
                        "in": "query",
                        "description": "Code",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sku",
                        "in": "query",
                        "description": "Sku",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "desc",
                        "in": "query",
                        "description": "Product Description",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cost",
                        "in": "query",
                        "description": "Product Cost",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "price",
                        "in": "query",
                        "description": "Product Selling Price",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "disc",
                        "in": "query",
                        "description": "Product Discount",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "promoprice",
                        "in": "query",
                        "description": "Promotion Price",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "promostartdate",
                        "in": "query",
                        "description": "Promotion Start Date",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "promoenddate",
                        "in": "query",
                        "description": "Promotion End Date",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "stock",
                        "in": "query",
                        "description": "Stock Qty",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "warrantyperiod",
                        "in": "query",
                        "description": "Warranty Period",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "stockthreshold",
                        "in": "query",
                        "description": "Stock Threshold",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "onsale",
                        "in": "query",
                        "description": "On Sale",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sale has been created successfully."
                    },
                    "default": {
                        "description": "Unable to create the sale."
                    }
                }
            }
        },
        "/api/filter/sale": {
            "get": {
                "tags": [
                    "SaleControllerService"
                ],
                "summary": "Filter list of sales",
                "description": "Returns list of filtered sales",
                "operationId": "filterSaleList",
                "parameters": [
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Page size",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "keyword",
                        "in": "query",
                        "description": "Keyword for filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fromdate",
                        "in": "query",
                        "description": "From Date for filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "todate",
                        "in": "query",
                        "description": "To string for filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "status for filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "onsale",
                        "in": "query",
                        "description": "onsale for filter",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved list of filtered sales"
                    },
                    "default": {
                        "description": "Unable to retrieve list of sales"
                    }
                }
            }
        },
        "/api/sale/{uid}": {
            "get": {
                "tags": [
                    "SaleControllerService"
                ],
                "summary": "Retrieves sale by Uid.",
                "operationId": "getSaleByUid",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Sale_ID, NOT 'ID'.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sale has been retrieved successfully."
                    },
                    "default": {
                        "description": "Unable to retrieve the sale."
                    }
                }
            },
            "put": {
                "tags": [
                    "SaleControllerService"
                ],
                "summary": "Update sale by Uid.",
                "operationId": "updateSaleByUid",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Sale_ID, NOT 'ID'.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Salename",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "storeid",
                        "in": "query",
                        "description": "Store ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "userid",
                        "in": "query",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sono",
                        "in": "query",
                        "description": "Sale Order No",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sku",
                        "in": "query",
                        "description": "totalqty",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "linetotal",
                        "in": "query",
                        "description": "Line Total",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "totalcost",
                        "in": "query",
                        "description": "All Product Cost",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "totaldisc",
                        "in": "query",
                        "description": "Total Discount",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "disc",
                        "in": "query",
                        "description": "Product Discount",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "promoprice",
                        "in": "query",
                        "description": "Promotion Price",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "promostartdate",
                        "in": "query",
                        "description": "Promotion Start Date",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "promoenddate",
                        "in": "query",
                        "description": "Promotion End Date",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "stock",
                        "in": "query",
                        "description": "Stock Qty",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "warrantyperiod",
                        "in": "query",
                        "description": "Warranty Period",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "stockthreshold",
                        "in": "query",
                        "description": "Stock Threshold",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "onsale",
                        "in": "query",
                        "description": "On Sale",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sale has been updated successfully."
                    },
                    "default": {
                        "description": "Unable to update the sale."
                    }
                }
            },
            "delete": {
                "tags": [
                    "SaleControllerService"
                ],
                "summary": "Set sale's 'status' to 0.",
                "operationId": "deleteSaleByUid",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Sale ID, NOT 'ID'.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sale has been 'deleted' successfully."
                    },
                    "default": {
                        "description": "Unable to 'delete' the sale."
                    }
                }
            }
        },
        "/api/usersales": {
            "get": {
                "tags": [
                    "SaleControllerService"
                ],
                "summary": "User Ordered Sale",
                "operationId": "userSales",
                "parameters": [
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "number of pageSize",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sale has been retrieved successfully."
                    },
                    "default": {
                        "description": "Unable to retrieve the sale."
                    }
                }
            }
        },
        "/api/shipping": {
            "get": {
                "tags": [
                    "ShippingControllerService"
                ],
                "summary": "Get list of shippings",
                "description": "Returns list of shippings",
                "operationId": "getShippings",
                "parameters": [
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "number of pageSize",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved list of shippings"
                    },
                    "default": {
                        "description": "Unable to retrieve list of shippings"
                    }
                }
            },
            "post": {
                "tags": [
                    "ShippingControllerService"
                ],
                "summary": "Creates a shipping.",
                "operationId": "createShipping",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Shippingname",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "store_id",
                        "in": "query",
                        "description": "Store ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "desc",
                        "in": "query",
                        "description": "Shipping description",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "price",
                        "in": "query",
                        "description": "Shipping price",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "maxweight",
                        "in": "query",
                        "description": "Shipping maximum weight",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "maxdimension",
                        "in": "query",
                        "description": "Shipping maximum dimension",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Shipping has been created successfully."
                    },
                    "default": {
                        "description": "Unable to create the shipping."
                    }
                }
            }
        },
        "/api/filter/shipping": {
            "get": {
                "tags": [
                    "ShippingControllerService"
                ],
                "summary": "Filter list of shippings",
                "description": "Returns list of filtered shippings",
                "operationId": "filterShippings",
                "parameters": [
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "number of pageSize",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "keyword",
                        "in": "query",
                        "description": "Keyword for filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fromdate",
                        "in": "query",
                        "description": "From Date for filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "todate",
                        "in": "query",
                        "description": "To date for filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "status for filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "store_id",
                        "in": "query",
                        "description": "store id for filter",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved list of filtered shippings"
                    },
                    "default": {
                        "description": "Unable to retrieve list of shippings"
                    }
                }
            }
        },
        "/api/shipping/{uid}": {
            "get": {
                "tags": [
                    "ShippingControllerService"
                ],
                "summary": "Retrieves shipping by Uid.",
                "operationId": "getShippingByUid",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Shipping_ID, NOT 'ID'.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Shipping has been retrieved successfully."
                    },
                    "default": {
                        "description": "Unable to retrieve the shipping."
                    }
                }
            },
            "put": {
                "tags": [
                    "ShippingControllerService"
                ],
                "summary": "Update shipping by Uid.",
                "operationId": "updateShippingByUid",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Shipping_ID, NOT 'ID'.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Shippingname",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "store_id",
                        "in": "query",
                        "description": "Store ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "desc",
                        "in": "query",
                        "description": "Shipping description",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "price",
                        "in": "query",
                        "description": "Shipping price",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "maxweight",
                        "in": "query",
                        "description": "Shipping maximum weight",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "maxdimension",
                        "in": "query",
                        "description": "Shipping maximum dimension",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Shipping has been created successfully."
                    },
                    "default": {
                        "description": "Unable to create the shipping."
                    }
                }
            },
            "delete": {
                "tags": [
                    "ShippingControllerService"
                ],
                "summary": "Set shipping's 'status' to 0.",
                "operationId": "deleteShippingByUid",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Shipping ID, NOT 'ID'.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Shipping has been 'deleted' successfully."
                    },
                    "default": {
                        "description": "Unable to 'delete' the shipping."
                    }
                }
            }
        },
        "/api/store": {
            "get": {
                "tags": [
                    "StoreControllerService"
                ],
                "summary": "Get list of stores",
                "description": "Returns list of stores",
                "operationId": "getStores",
                "parameters": [
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "number of pageSize",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved list of stores"
                    },
                    "default": {
                        "description": "Unable to retrieve list of stores"
                    }
                }
            },
            "post": {
                "tags": [
                    "StoreControllerService"
                ],
                "summary": "Creates a store.",
                "operationId": "createStore",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Storename",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "company_id",
                        "in": "query",
                        "description": "Company ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "User ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "companyBelongings",
                        "in": "query",
                        "description": "Store belongs to Company",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "contact",
                        "in": "query",
                        "description": "Contact",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "desc",
                        "in": "query",
                        "description": "Description",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "Email",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "address",
                        "in": "query",
                        "description": "Address",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "postcode",
                        "in": "query",
                        "description": "Post Code",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "state",
                        "in": "query",
                        "description": "State",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "city",
                        "in": "query",
                        "description": "City",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "country",
                        "in": "query",
                        "description": "Country",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "img": {
                                        "description": "Image",
                                        "type": "file",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Store has been created successfully."
                    },
                    "default": {
                        "description": "Unable to create the store."
                    }
                }
            }
        },
        "/api/filter/store": {
            "get": {
                "tags": [
                    "StoreControllerService"
                ],
                "summary": "Filter list of stores",
                "description": "Returns list of filtered stores",
                "operationId": "filterStores",
                "parameters": [
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "number of pageSize",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "keyword",
                        "in": "query",
                        "description": "Keyword for filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fromdate",
                        "in": "query",
                        "description": "From Date for filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "todate",
                        "in": "query",
                        "description": "To date for filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "status for filter",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved list of filtered stores"
                    },
                    "default": {
                        "description": "Unable to retrieve list of stores"
                    }
                }
            }
        },
        "/api/store/{uid}": {
            "get": {
                "tags": [
                    "StoreControllerService"
                ],
                "summary": "Retrieves store by Uid.",
                "operationId": "getStoreByUid",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Store_ID, NOT 'ID'.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Store has been retrieved successfully."
                    },
                    "default": {
                        "description": "Unable to retrieve the store."
                    }
                }
            },
            "post": {
                "tags": [
                    "StoreControllerService"
                ],
                "summary": "Update store by Uid.",
                "operationId": "updateStoreByUid",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Store_ID, NOT 'ID'.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Storename",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "company_id",
                        "in": "query",
                        "description": "Company ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "User ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "companyBelongings",
                        "in": "query",
                        "description": "Store belongs to Company",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "desc",
                        "in": "query",
                        "description": "Description",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "contact",
                        "in": "query",
                        "description": "Contact",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "Email",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "address",
                        "in": "query",
                        "description": "Address",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "postcode",
                        "in": "query",
                        "description": "Post Code",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "state",
                        "in": "query",
                        "description": "State",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "city",
                        "in": "query",
                        "description": "City",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "country",
                        "in": "query",
                        "description": "Country",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "_method",
                        "in": "query",
                        "description": "For spoofing purposes.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "PUT"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "img": {
                                        "description": "Image",
                                        "type": "file",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Store has been updated successfully."
                    },
                    "default": {
                        "description": "Unable to update the store."
                    }
                }
            },
            "delete": {
                "tags": [
                    "StoreControllerService"
                ],
                "summary": "Set store's 'status' to 0.",
                "operationId": "deleteStoreByUid",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Store ID, NOT 'ID'.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Store has been 'deleted' successfully."
                    },
                    "default": {
                        "description": "Unable to 'delete' the store."
                    }
                }
            }
        },
        "/api/store/{uid}/promotions": {
            "get": {
                "tags": [
                    "StoreControllerService"
                ],
                "summary": "Retrieves store promotion plans by Uid.",
                "operationId": "getPromotionsByStoreUid",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Store ID, NOT 'ID'.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "number of pageSize",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Promotions has been retrieved successfully."
                    },
                    "default": {
                        "description": "Unable to retrieved the promotions."
                    }
                }
            }
        },
        "/api/store/{uid}/warranties": {
            "get": {
                "tags": [
                    "StoreControllerService"
                ],
                "summary": "Retrieves store warranties by Uid.",
                "operationId": "getWarrantiesByStoreUid",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Store ID, NOT 'ID'.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "number of pageSize",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Warranties has been retrieved successfully."
                    },
                    "default": {
                        "description": "Unable to retrieved the warranties."
                    }
                }
            }
        },
        "/api/store/{uid}/shippings": {
            "get": {
                "tags": [
                    "StoreControllerService"
                ],
                "summary": "Retrieves store shippings by Uid.",
                "operationId": "getShippingsByStoreUid",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Store ID, NOT 'ID'.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "number of pageSize",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Shippings has been retrieved successfully."
                    },
                    "default": {
                        "description": "Unable to retrieved the shippings."
                    }
                }
            }
        },
        "/api/store/{uid}/inventories": {
            "get": {
                "tags": [
                    "StoreControllerService"
                ],
                "summary": "Retrieves store inventories by Uid.",
                "operationId": "getInventoriesByStoreUid",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Store ID, NOT 'ID'.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "number of pageSize",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Inventories has been retrieved successfully."
                    },
                    "default": {
                        "description": "Unable to retrieved the inventories."
                    }
                }
            }
        },
        "/api/store/{uid}/vouchers": {
            "get": {
                "tags": [
                    "StoreControllerService"
                ],
                "summary": "Retrieves store vouchers by Uid.",
                "operationId": "getVouchersByStoreUid",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Store ID, NOT 'ID'.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "number of pageSize",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Vouchers has been retrieved successfully."
                    },
                    "default": {
                        "description": "Unable to retrieved the vouchers."
                    }
                }
            }
        },
        "/api/store/{uid}/sales": {
            "get": {
                "tags": [
                    "StoreControllerService"
                ],
                "summary": "Retrieves store sales by Uid.",
                "operationId": "getSalesByStoreUid",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Store ID, NOT 'ID'.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "number of pageSize",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sales has been retrieved successfully."
                    },
                    "default": {
                        "description": "Unable to retrieved the sales."
                    }
                }
            }
        },
        "/api/storereview": {
            "get": {
                "tags": [
                    "StoreReviewControllerService"
                ],
                "summary": "Get list of storereviews",
                "description": "Returns list of storereviews",
                "operationId": "getStoreReviews",
                "parameters": [
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "number of pageSize",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved list of storereviews"
                    },
                    "default": {
                        "description": "Unable to retrieve list of storereviews"
                    }
                }
            },
            "post": {
                "tags": [
                    "StoreReviewControllerService"
                ],
                "summary": "Creates a storereview.",
                "operationId": "createStoreReview",
                "parameters": [
                    {
                        "name": "title",
                        "in": "query",
                        "description": "StoreReview title",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "store_id",
                        "in": "query",
                        "description": "Store ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "desc",
                        "in": "query",
                        "description": "Review description",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "rating",
                        "in": "query",
                        "description": "Review rating",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "img": {
                                        "description": "Image",
                                        "type": "file",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "StoreReview has been created successfully."
                    },
                    "default": {
                        "description": "Unable to create the storereview."
                    }
                }
            }
        },
        "/api/filter/storereview": {
            "get": {
                "tags": [
                    "StoreReviewControllerService"
                ],
                "summary": "Filter list of storereviews",
                "description": "Returns list of filtered storereviews",
                "operationId": "filterStoreReviews",
                "parameters": [
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "number of pageSize",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "keyword",
                        "in": "query",
                        "description": "Keyword for filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fromdate",
                        "in": "query",
                        "description": "From Date for filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "todate",
                        "in": "query",
                        "description": "To date for filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "status for filter",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved list of filtered storereviews"
                    },
                    "default": {
                        "description": "Unable to retrieve list of storereviews"
                    }
                }
            }
        },
        "/api/storereview/{uid}": {
            "get": {
                "tags": [
                    "StoreReviewControllerService"
                ],
                "summary": "Retrieves storereview by Uid.",
                "operationId": "getStoreReviewByUid",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "StoreReview_ID, NOT 'ID'.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "StoreReview has been retrieved successfully."
                    },
                    "default": {
                        "description": "Unable to retrieve the storereview."
                    }
                }
            },
            "put": {
                "tags": [
                    "StoreReviewControllerService"
                ],
                "summary": "Update storereview by Uid.",
                "operationId": "updateStoreReviewByUid",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "StoreReview_ID, NOT 'ID'.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "title",
                        "in": "query",
                        "description": "StoreReview title",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "store_id",
                        "in": "query",
                        "description": "Store ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "desc",
                        "in": "query",
                        "description": "Review description",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "rating",
                        "in": "query",
                        "description": "Review rating",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "img": {
                                        "description": "Image",
                                        "type": "file",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "StoreReview has been created successfully."
                    },
                    "default": {
                        "description": "Unable to create the storereview."
                    }
                }
            },
            "delete": {
                "tags": [
                    "StoreReviewControllerService"
                ],
                "summary": "Set storereview's 'status' to 0.",
                "operationId": "deleteStoreReviewByUid",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "StoreReview ID, NOT 'ID'.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "StoreReview has been 'deleted' successfully."
                    },
                    "default": {
                        "description": "Unable to 'delete' the storereview."
                    }
                }
            }
        },
        "/api/ticket": {
            "get": {
                "tags": [
                    "TicketControllerService"
                ],
                "summary": "Get list of tickets",
                "description": "Returns list of tickets",
                "operationId": "getTickets",
                "parameters": [
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "number of pageSize",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved list of tickets"
                    },
                    "default": {
                        "description": "Unable to retrieve list of tickets"
                    }
                }
            },
            "post": {
                "tags": [
                    "TicketControllerService"
                ],
                "summary": "Creates a ticket.",
                "operationId": "createTicket",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Ticketname",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "store_id",
                        "in": "query",
                        "description": "Store ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "product_promotion_id",
                        "in": "query",
                        "description": "Promotion ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "code",
                        "in": "query",
                        "description": "Code",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sku",
                        "in": "query",
                        "description": "Sku",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "desc",
                        "in": "query",
                        "description": "Product Description",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "imgpath",
                        "in": "query",
                        "description": "Image Path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "price",
                        "in": "query",
                        "description": "Product Selling Price",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "qty",
                        "in": "query",
                        "description": "Stock Qty",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "stockthreshold",
                        "in": "query",
                        "description": "Stock Threshold",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "enddate",
                        "in": "query",
                        "description": "Valid end date",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "onsale",
                        "in": "query",
                        "description": "On Sale",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ticket has been created successfully."
                    },
                    "default": {
                        "description": "Unable to create the ticket."
                    }
                }
            }
        },
        "/api/filter/ticket": {
            "get": {
                "tags": [
                    "TicketControllerService"
                ],
                "summary": "Filter list of tickets",
                "description": "Returns list of filtered tickets",
                "operationId": "filterTickets",
                "parameters": [
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "number of pageSize",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "keyword",
                        "in": "query",
                        "description": "Keyword for filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fromdate",
                        "in": "query",
                        "description": "From Date for filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "todate",
                        "in": "query",
                        "description": "To date for filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "onsale",
                        "in": "query",
                        "description": "On sale for filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "status for filter",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved list of filtered tickets"
                    },
                    "default": {
                        "description": "Unable to retrieve list of tickets"
                    }
                }
            }
        },
        "/api/ticket/{uid}": {
            "get": {
                "tags": [
                    "TicketControllerService"
                ],
                "summary": "Retrieves ticket by Uid.",
                "operationId": "getTicketByUid",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Ticket_ID, NOT 'ID'.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ticket has been retrieved successfully."
                    },
                    "default": {
                        "description": "Unable to retrieve the ticket."
                    }
                }
            },
            "put": {
                "tags": [
                    "TicketControllerService"
                ],
                "summary": "Update ticket by Uid.",
                "operationId": "updateTicketByUid",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Ticket_ID, NOT 'ID'.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Ticketname",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "store_id",
                        "in": "query",
                        "description": "Store ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "product_promotion_id",
                        "in": "query",
                        "description": "Promotion ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "code",
                        "in": "query",
                        "description": "Code",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sku",
                        "in": "query",
                        "description": "Sku",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "desc",
                        "in": "query",
                        "description": "Product Description",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "imgpath",
                        "in": "query",
                        "description": "Image Path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "price",
                        "in": "query",
                        "description": "Product Selling Price",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "qty",
                        "in": "query",
                        "description": "Stock Qty",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "stockthreshold",
                        "in": "query",
                        "description": "Stock Threshold",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "enddate",
                        "in": "query",
                        "description": "Valid end date",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "onsale",
                        "in": "query",
                        "description": "On Sale",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ticket has been updated successfully."
                    },
                    "default": {
                        "description": "Unable to update the ticket."
                    }
                }
            },
            "delete": {
                "tags": [
                    "TicketControllerService"
                ],
                "summary": "Set ticket's 'status' to 0.",
                "operationId": "deleteTicketByUid",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Ticket ID, NOT 'ID'.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ticket has been 'deleted' successfully."
                    },
                    "default": {
                        "description": "Unable to 'delete' the ticket."
                    }
                }
            }
        },
        "/api/type": {
            "get": {
                "tags": [
                    "TypeControllerService"
                ],
                "summary": "Get list of types",
                "description": "Returns list of types",
                "operationId": "getTypes",
                "parameters": [
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "number of pageSize",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved list of types"
                    },
                    "default": {
                        "description": "Unable to retrieve list of types"
                    }
                }
            },
            "post": {
                "tags": [
                    "TypeControllerService"
                ],
                "summary": "Creates a type.",
                "operationId": "createType",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Type name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "desc",
                        "in": "query",
                        "description": "Type Description",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "icon",
                        "in": "query",
                        "description": "Icon",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Type has been created successfully."
                    },
                    "default": {
                        "description": "Unable to create the type."
                    }
                }
            }
        },
        "/api/filter/type": {
            "get": {
                "tags": [
                    "TypeControllerService"
                ],
                "summary": "Filter list of types",
                "description": "Returns list of filtered types",
                "operationId": "filterTypes",
                "parameters": [
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "number of pageSize",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "keyword",
                        "in": "query",
                        "description": "Keyword for filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fromdate",
                        "in": "query",
                        "description": "From Date for filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "todate",
                        "in": "query",
                        "description": "To date for filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "status for filter",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved list of filtered types"
                    },
                    "default": {
                        "description": "Unable to retrieve list of types"
                    }
                }
            }
        },
        "/api/type/{uid}": {
            "get": {
                "tags": [
                    "TypeControllerService"
                ],
                "summary": "Retrieves type by Uid.",
                "operationId": "getTypeByUid",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Type_ID, NOT 'ID'.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Type has been retrieved successfully."
                    },
                    "default": {
                        "description": "Unable to retrieve the type."
                    }
                }
            },
            "put": {
                "tags": [
                    "TypeControllerService"
                ],
                "summary": "Update type by Uid.",
                "operationId": "updateTypeByUid",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Type_ID, NOT 'ID'.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Type name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "desc",
                        "in": "query",
                        "description": "Type Description",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "icon",
                        "in": "query",
                        "description": "Icon",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Type has been updated successfully."
                    },
                    "default": {
                        "description": "Unable to update the type."
                    }
                }
            },
            "delete": {
                "tags": [
                    "TypeControllerService"
                ],
                "summary": "Set type's 'status' to 0.",
                "operationId": "deleteTypeByUid",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Type ID, NOT 'ID'.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Type has been 'deleted' successfully."
                    },
                    "default": {
                        "description": "Unable to 'delete' the type."
                    }
                }
            }
        },
        "/api/user": {
            "get": {
                "tags": [
                    "UserControllerService"
                ],
                "summary": "Get list of users",
                "description": "Returns list of users",
                "operationId": "getUsers",
                "parameters": [
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "number of pageSize",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved list of users"
                    },
                    "default": {
                        "description": "Unable to retrieve list of users"
                    }
                }
            },
            "post": {
                "tags": [
                    "UserControllerService"
                ],
                "summary": "Creates a user.",
                "operationId": "createUser",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Username",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "Email",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "description": "Password",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "password_confirmation",
                        "in": "query",
                        "description": "Password Confirmation",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "country",
                        "in": "query",
                        "description": "Country",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User has been created successfully."
                    },
                    "default": {
                        "description": "Unable to create the user."
                    }
                }
            }
        },
        "/api/filter/user": {
            "get": {
                "tags": [
                    "UserControllerService"
                ],
                "summary": "Filter list of users",
                "description": "Returns list of filtered users",
                "operationId": "filterUsers",
                "parameters": [
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "number of pageSize",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "keyword",
                        "in": "query",
                        "description": "Keyword for filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fromdate",
                        "in": "query",
                        "description": "From Date for filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "todate",
                        "in": "query",
                        "description": "To string for filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "status for filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "company_id",
                        "in": "query",
                        "description": "Company id for filter",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved list of filtered users"
                    },
                    "default": {
                        "description": "Unable to retrieve list of users"
                    }
                }
            }
        },
        "/api/user/{uid}": {
            "get": {
                "tags": [
                    "UserControllerService"
                ],
                "summary": "Retrieves user by Uid.",
                "operationId": "getUserByUid",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "User_ID, NOT 'ID'.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User has been retrieved successfully."
                    },
                    "default": {
                        "description": "Unable to retrieve the user."
                    }
                }
            },
            "put": {
                "tags": [
                    "UserControllerService"
                ],
                "summary": "Update user by Uid.",
                "operationId": "updateUserByUid",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "User_ID, NOT 'ID'.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Username.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "Email.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "tel1",
                        "in": "query",
                        "description": "Telephone Number #1.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "address1",
                        "in": "query",
                        "description": "Address #1.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "city",
                        "in": "query",
                        "description": "City.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "postcode",
                        "in": "query",
                        "description": "PostCode.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "state",
                        "in": "query",
                        "description": "State.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "country",
                        "in": "query",
                        "description": "Country.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "icno",
                        "in": "query",
                        "description": "IC Number.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User has been updated successfully."
                    },
                    "default": {
                        "description": "Unable to update the user."
                    }
                }
            },
            "delete": {
                "tags": [
                    "UserControllerService"
                ],
                "summary": "Set user's 'status' to 0.",
                "operationId": "deleteUserByUid",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "User ID, NOT 'ID'.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User has been 'deleted' successfully."
                    },
                    "default": {
                        "description": "Unable to 'delete' the user."
                    }
                }
            }
        },
        "/api/authentication": {
            "post": {
                "tags": [
                    "UserControllerService"
                ],
                "summary": "Authenticates current request's user.",
                "operationId": "authenticateCurrentRequestsUser",
                "responses": {
                    "200": {
                        "description": "User is already authenticated."
                    },
                    "default": {
                        "description": "User is not authenticated."
                    }
                }
            }
        },
        "/api/register": {
            "post": {
                "tags": [
                    "UserControllerService"
                ],
                "summary": "Creates a user without needing authorization.",
                "operationId": "createUserWithoutAuthorization",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Username.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "Email.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "description": "Password.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "password_confirmation",
                        "in": "query",
                        "description": "Confirm Password.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User has been successfully created."
                    },
                    "default": {
                        "description": "User is not created."
                    }
                }
            }
        },
        "/api/verificationcode": {
            "get": {
                "tags": [
                    "VerificationCodeControllerService"
                ],
                "summary": "Get list of verificationcodes",
                "description": "Returns list of verificationcodes",
                "operationId": "getVerificationCodeList",
                "parameters": [
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "Page number.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Page size.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved list of verificationcodes"
                    },
                    "default": {
                        "description": "Unable to retrieve list of verificationcodes"
                    }
                }
            },
            "post": {
                "tags": [
                    "VerificationCodeControllerService"
                ],
                "summary": "Creates a verificationcode.",
                "operationId": "createVerificationCode",
                "parameters": [
                    {
                        "name": "ticketid",
                        "in": "query",
                        "description": "Verification belongs to which Ticket",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "code",
                        "in": "query",
                        "description": "VerificationCode",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "VerificationCode has been created successfully."
                    },
                    "default": {
                        "description": "Unable to create the verificationcode."
                    }
                }
            }
        },
        "/api/filter/verificationcode": {
            "get": {
                "tags": [
                    "VerificationCodeControllerService"
                ],
                "summary": "Filter list of verificationcodes",
                "description": "Returns list of filtered verificationcodes",
                "operationId": "filterVerificationCodeList",
                "parameters": [
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Page size",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "keyword",
                        "in": "query",
                        "description": "Keyword for filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fromdate",
                        "in": "query",
                        "description": "From Date for filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "todate",
                        "in": "query",
                        "description": "To string for filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "status for filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "onverificationcode",
                        "in": "query",
                        "description": "onverificationcode for filter",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved list of filtered verificationcodes"
                    },
                    "default": {
                        "description": "Unable to retrieve list of verificationcodes"
                    }
                }
            }
        },
        "/api/verificationcode/{uid}": {
            "get": {
                "tags": [
                    "VerificationCodeControllerService"
                ],
                "summary": "Retrieves verificationcode by Uid.",
                "operationId": "getVerificationCodeByUid",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "VerificationCode_ID, NOT 'ID'.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "VerificationCode has been retrieved successfully."
                    },
                    "default": {
                        "description": "Unable to retrieve the verificationcode."
                    }
                }
            },
            "put": {
                "tags": [
                    "VerificationCodeControllerService"
                ],
                "summary": "Update verificationcode by Uid.",
                "operationId": "updateVerificationCodeByUid",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "VerificationCode_ID, NOT 'ID'.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ticketid",
                        "in": "query",
                        "description": "Verification belongs to which Ticket",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "code",
                        "in": "query",
                        "description": "VerificationCode",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "VerificationCode has been updated successfully."
                    },
                    "default": {
                        "description": "Unable to update the verificationcode."
                    }
                }
            },
            "delete": {
                "tags": [
                    "VerificationCodeControllerService"
                ],
                "summary": "Set verificationcode's 'status' to 0.",
                "operationId": "deleteVerificationCodeByUid",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "VerificationCode ID, NOT 'ID'.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "VerificationCode has been 'deleted' successfully."
                    },
                    "default": {
                        "description": "Unable to 'delete' the verificationcode."
                    }
                }
            }
        },
        "/api/video": {
            "get": {
                "tags": [
                    "VideoControllerService"
                ],
                "summary": "Get list of videos",
                "description": "Returns list of videos",
                "operationId": "getVideos",
                "parameters": [
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "number of pageSize",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved list of videos"
                    },
                    "default": {
                        "description": "Unable to retrieve list of videos"
                    }
                }
            },
            "post": {
                "tags": [
                    "VideoControllerService"
                ],
                "summary": "Creates a video.",
                "operationId": "createVideo",
                "parameters": [
                    {
                        "name": "channel_id",
                        "in": "query",
                        "description": "Video belongs To which Channel",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "title",
                        "in": "query",
                        "description": "Video title",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "desc",
                        "in": "query",
                        "description": "Video description",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "description": "Is this video public?",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "videopath",
                        "in": "query",
                        "description": "Video Link",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "videopublicid",
                        "in": "query",
                        "description": "Video Link",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "totallength",
                        "in": "query",
                        "description": "Length Of Video",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "free",
                        "in": "query",
                        "description": "Is this video free?",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "price",
                        "in": "query",
                        "description": "Video Price",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "discbyprice",
                        "in": "query",
                        "description": "Is this video discount by price?",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "disc",
                        "in": "query",
                        "description": "Discount Price",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "discpctg",
                        "in": "query",
                        "description": "Discount Percentage",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "img": {
                                        "description": "Video Cover Image",
                                        "type": "file",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Video has been created successfully."
                    },
                    "default": {
                        "description": "Unable to create the video."
                    }
                }
            }
        },
        "/api/filter/video": {
            "get": {
                "tags": [
                    "VideoControllerService"
                ],
                "summary": "Filter list of videos",
                "description": "Returns list of filtered videos",
                "operationId": "filterVideos",
                "parameters": [
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "number of pageSize",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "keyword",
                        "in": "query",
                        "description": "Keyword for filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fromdate",
                        "in": "query",
                        "description": "From Date for filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "todate",
                        "in": "query",
                        "description": "To string for filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "status for filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "company_id",
                        "in": "query",
                        "description": "Company id for filter",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved list of filtered videos"
                    },
                    "default": {
                        "description": "Unable to retrieve list of videos"
                    }
                }
            }
        },
        "/api/video/{uid}": {
            "get": {
                "tags": [
                    "VideoControllerService"
                ],
                "summary": "Retrieves video by Uid.",
                "operationId": "getVideoByUid",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Video_ID, NOT 'ID'.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Video has been retrieved successfully."
                    },
                    "default": {
                        "description": "Unable to retrieve the video."
                    }
                }
            },
            "post": {
                "tags": [
                    "VideoControllerService"
                ],
                "summary": "Update video by Uid.",
                "operationId": "updateVideoByUid",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Video_ID, NOT 'ID'.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "channel_id",
                        "in": "query",
                        "description": "Video belongs To which Channel",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "title",
                        "in": "query",
                        "description": "Video title",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "desc",
                        "in": "query",
                        "description": "Video description",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "description": "Is this video public?",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "videopath",
                        "in": "query",
                        "description": "Video Link",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "videopublicid",
                        "in": "query",
                        "description": "Video ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "totallength",
                        "in": "query",
                        "description": "Length Of Video",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "free",
                        "in": "query",
                        "description": "Is this video free?",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "price",
                        "in": "query",
                        "description": "Video Price",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "discbyprice",
                        "in": "query",
                        "description": "Is this video discount by price?",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "disc",
                        "in": "query",
                        "description": "Discount Price",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "discpctg",
                        "in": "query",
                        "description": "Discount Percentage",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "_method",
                        "in": "query",
                        "description": "For spoofing purposes.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "PUT"
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "img": {
                                        "description": "Video Cover Image",
                                        "type": "file",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Video has been updated successfully."
                    },
                    "default": {
                        "description": "Unable to update the video."
                    }
                }
            },
            "delete": {
                "tags": [
                    "VideoControllerService"
                ],
                "summary": "Set video's 'status' to 0.",
                "operationId": "deleteVideoByUid",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Video ID, NOT 'ID'.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Video has been 'deleted' successfully."
                    },
                    "default": {
                        "description": "Unable to 'delete' the video."
                    }
                }
            }
        },
        "/api/public/video/{uid}": {
            "get": {
                "tags": [
                    "VideoControllerService"
                ],
                "summary": "Retrieves public video by Uid.",
                "operationId": "getPublicVideoByUid",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Video ID, NOT 'ID'.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Videos has been retrieved successfully."
                    },
                    "default": {
                        "description": "Unable to retrieved the videos."
                    }
                }
            }
        },
        "/api/public/videos": {
            "get": {
                "tags": [
                    "VideoControllerService"
                ],
                "summary": "Retrieves all public videos.",
                "operationId": "getPublicVideos",
                "parameters": [
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "number of pageSize",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Videos has been retrieved successfully."
                    },
                    "default": {
                        "description": "Unable to retrieved the videos."
                    }
                }
            }
        },
        "/api/public/videos/filter": {
            "get": {
                "tags": [
                    "VideoControllerService"
                ],
                "summary": "Filter all public videos.",
                "operationId": "filterPublicVideos",
                "parameters": [
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "number of pageSize",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "keyword",
                        "in": "query",
                        "description": "Keyword for filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fromdate",
                        "in": "query",
                        "description": "From Date for filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "todate",
                        "in": "query",
                        "description": "To string for filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "status for filter",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Videos has been retrieved successfully."
                    },
                    "default": {
                        "description": "Unable to retrieved the videos."
                    }
                }
            }
        },
        "/api/public/video/{uid}/comments": {
            "get": {
                "tags": [
                    "VideoControllerService"
                ],
                "summary": "Retrieves all public comments.",
                "operationId": "getPublicVideoComments",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Video ID, NOT 'ID'.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "number of pageSize",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Comments has been retrieved successfully."
                    },
                    "default": {
                        "description": "Unable to retrieved the comments."
                    }
                }
            }
        },
        "/api/public/video/like/edit": {
            "post": {
                "tags": [
                    "VideoControllerService"
                ],
                "summary": "Set like for video",
                "operationId": "setVideoLikeById",
                "parameters": [
                    {
                        "name": "video_id",
                        "in": "query",
                        "description": "Video id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Like or dislike",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Like was set"
                    },
                    "default": {
                        "description": "Unable to set like"
                    }
                }
            }
        },
        "/api/uservideos": {
            "get": {
                "tags": [
                    "VideoControllerService"
                ],
                "summary": "User Ordered Video",
                "operationId": "userVideos",
                "parameters": [
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "number of pageSize",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Video has been retrieved successfully."
                    },
                    "default": {
                        "description": "Unable to retrieve the video."
                    }
                }
            }
        },
        "/api/vouchercode": {
            "get": {
                "tags": [
                    "VoucherCodeControllerService"
                ],
                "summary": "Get list of vouchercodes",
                "description": "Returns list of vouchercodes",
                "operationId": "getVoucherCodeList",
                "parameters": [
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "Page number.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Page size.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved list of vouchercodes"
                    },
                    "default": {
                        "description": "Unable to retrieve list of vouchercodes"
                    }
                }
            },
            "post": {
                "tags": [
                    "VoucherCodeControllerService"
                ],
                "summary": "Creates a vouchercode.",
                "operationId": "createVoucherCode",
                "parameters": [
                    {
                        "name": "voucher_id",
                        "in": "query",
                        "description": "VoucherCode belongs to which Voucher",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "VoucherCode has been created successfully."
                    },
                    "default": {
                        "description": "Unable to create the vouchercode."
                    }
                }
            }
        },
        "/api/filter/vouchercode": {
            "get": {
                "tags": [
                    "VoucherCodeControllerService"
                ],
                "summary": "Filter list of vouchercodes",
                "description": "Returns list of filtered vouchercodes",
                "operationId": "filterVoucherCodeList",
                "parameters": [
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Page size",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "keyword",
                        "in": "query",
                        "description": "Keyword for filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fromdate",
                        "in": "query",
                        "description": "From Date for filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "todate",
                        "in": "query",
                        "description": "To string for filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "status for filter",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved list of filtered vouchercodes"
                    },
                    "default": {
                        "description": "Unable to retrieve list of vouchercodes"
                    }
                }
            }
        },
        "/api/vouchercode/{uid}": {
            "get": {
                "tags": [
                    "VoucherCodeControllerService"
                ],
                "summary": "Retrieves vouchercode by Uid.",
                "operationId": "getVoucherCodeByUid",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "VoucherCode_ID, NOT 'ID'.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "VoucherCode has been retrieved successfully."
                    },
                    "default": {
                        "description": "Unable to retrieve the vouchercode."
                    }
                }
            },
            "put": {
                "tags": [
                    "VoucherCodeControllerService"
                ],
                "summary": "Update vouchercode by Uid.",
                "operationId": "updateVoucherCodeByUid",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "VoucherCode_ID, NOT 'ID'.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "store_id",
                        "in": "query",
                        "description": "VoucherCode belongs to which Store",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "VoucherCode Name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "desc",
                        "in": "query",
                        "description": "VoucherCode Description",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "unlimited",
                        "in": "query",
                        "description": "Is This VoucherCode Unlimited?",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "qty",
                        "in": "query",
                        "description": "The limited quantity of vouchercode",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "discbyprice",
                        "in": "query",
                        "description": "Is This VoucherCode Discount By Price?",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "disc",
                        "in": "query",
                        "description": "Discount price",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "discpctg",
                        "in": "query",
                        "description": "Discount percentage",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "minpurchase",
                        "in": "query",
                        "description": "Minimum Purchase Price To Apply VoucherCode",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "minqty",
                        "in": "query",
                        "description": "Minimum Purchase Qty To Apply VoucherCode",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "minvariety",
                        "in": "query",
                        "description": "Minimum Item Variety To Apply VoucherCode",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "startdate",
                        "in": "query",
                        "description": "VoucherCode Start Date",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "enddate",
                        "in": "query",
                        "description": "VoucherCode End Date",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "VoucherCode has been updated successfully."
                    },
                    "default": {
                        "description": "Unable to update the vouchercode."
                    }
                }
            },
            "delete": {
                "tags": [
                    "VoucherCodeControllerService"
                ],
                "summary": "Set vouchercode's 'status' to 0.",
                "operationId": "deleteVoucherCodeByUid",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "VoucherCode ID, NOT 'ID'.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "VoucherCode has been 'deleted' successfully."
                    },
                    "default": {
                        "description": "Unable to 'delete' the vouchercode."
                    }
                }
            }
        },
        "/api/voucher": {
            "get": {
                "tags": [
                    "VoucherControllerService"
                ],
                "summary": "Get list of vouchers",
                "description": "Returns list of vouchers",
                "operationId": "getVoucherList",
                "parameters": [
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "Page number.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Page size.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved list of vouchers"
                    },
                    "default": {
                        "description": "Unable to retrieve list of vouchers"
                    }
                }
            },
            "post": {
                "tags": [
                    "VoucherControllerService"
                ],
                "summary": "Creates a voucher.",
                "operationId": "createVoucher",
                "parameters": [
                    {
                        "name": "store_id",
                        "in": "query",
                        "description": "Voucher belongs to which Store",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Voucher Name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "desc",
                        "in": "query",
                        "description": "Voucher Description",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "unlimited",
                        "in": "query",
                        "description": "Is This Voucher Unlimited?",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "qty",
                        "in": "query",
                        "description": "The limited quantity of voucher",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "discbyprice",
                        "in": "query",
                        "description": "Is This Voucher Discount By Price?",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "disc",
                        "in": "query",
                        "description": "Discount price",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "discpctg",
                        "in": "query",
                        "description": "Discount percentage",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "minpurchase",
                        "in": "query",
                        "description": "Minimum Purchase Price To Apply Voucher",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "minqty",
                        "in": "query",
                        "description": "Minimum Purchase Qty To Apply Voucher",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "minvariety",
                        "in": "query",
                        "description": "Minimum Item Variety To Apply Voucher",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "startdate",
                        "in": "query",
                        "description": "Voucher Start Date",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "enddate",
                        "in": "query",
                        "description": "Voucher End Date",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Voucher has been created successfully."
                    },
                    "default": {
                        "description": "Unable to create the voucher."
                    }
                }
            }
        },
        "/api/filter/voucher": {
            "get": {
                "tags": [
                    "VoucherControllerService"
                ],
                "summary": "Filter list of vouchers",
                "description": "Returns list of filtered vouchers",
                "operationId": "filterVoucherList",
                "parameters": [
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Page size",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "keyword",
                        "in": "query",
                        "description": "Keyword for filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fromdate",
                        "in": "query",
                        "description": "From Date for filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "todate",
                        "in": "query",
                        "description": "To string for filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "status for filter",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved list of filtered vouchers"
                    },
                    "default": {
                        "description": "Unable to retrieve list of vouchers"
                    }
                }
            }
        },
        "/api/voucher/{uid}": {
            "get": {
                "tags": [
                    "VoucherControllerService"
                ],
                "summary": "Retrieves voucher by Uid.",
                "operationId": "getVoucherByUid",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Voucher_ID, NOT 'ID'.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Voucher has been retrieved successfully."
                    },
                    "default": {
                        "description": "Unable to retrieve the voucher."
                    }
                }
            },
            "put": {
                "tags": [
                    "VoucherControllerService"
                ],
                "summary": "Update voucher by Uid.",
                "operationId": "updateVoucherByUid",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Voucher_ID, NOT 'ID'.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "store_id",
                        "in": "query",
                        "description": "Voucher belongs to which Store",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Voucher Name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "desc",
                        "in": "query",
                        "description": "Voucher Description",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "unlimited",
                        "in": "query",
                        "description": "Is This Voucher Unlimited?",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "qty",
                        "in": "query",
                        "description": "The limited quantity of voucher",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "discbyprice",
                        "in": "query",
                        "description": "Is This Voucher Discount By Price?",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "disc",
                        "in": "query",
                        "description": "Discount price",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "discpctg",
                        "in": "query",
                        "description": "Discount percentage",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "minpurchase",
                        "in": "query",
                        "description": "Minimum Purchase Price To Apply Voucher",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "minqty",
                        "in": "query",
                        "description": "Minimum Purchase Qty To Apply Voucher",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "minvariety",
                        "in": "query",
                        "description": "Minimum Item Variety To Apply Voucher",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "startdate",
                        "in": "query",
                        "description": "Voucher Start Date",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "enddate",
                        "in": "query",
                        "description": "Voucher End Date",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Voucher has been updated successfully."
                    },
                    "default": {
                        "description": "Unable to update the voucher."
                    }
                }
            },
            "delete": {
                "tags": [
                    "VoucherControllerService"
                ],
                "summary": "Set voucher's 'status' to 0.",
                "operationId": "deleteVoucherByUid",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Voucher ID, NOT 'ID'.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Voucher has been 'deleted' successfully."
                    },
                    "default": {
                        "description": "Unable to 'delete' the voucher."
                    }
                }
            }
        },
        "/api/warranty": {
            "get": {
                "tags": [
                    "WarrantyControllerService"
                ],
                "summary": "Get list of warranties",
                "description": "Returns list of warranties",
                "operationId": "getWarranties",
                "parameters": [
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "number of pageSize",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved list of warranties"
                    },
                    "default": {
                        "description": "Unable to retrieve list of warranties"
                    }
                }
            },
            "post": {
                "tags": [
                    "WarrantyControllerService"
                ],
                "summary": "Creates a warranty.",
                "operationId": "createWarranty",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Warrantyname",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "store_id",
                        "in": "query",
                        "description": "Store ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "desc",
                        "in": "query",
                        "description": "Warranty description",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "period",
                        "in": "query",
                        "description": "Warranty Period",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "policy",
                        "in": "query",
                        "description": "Warranty Policy",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Warranty has been created successfully."
                    },
                    "default": {
                        "description": "Unable to create the warranty."
                    }
                }
            }
        },
        "/api/filter/warranty": {
            "get": {
                "tags": [
                    "WarrantyControllerService"
                ],
                "summary": "Filter list of warranties",
                "description": "Returns list of filtered warranties",
                "operationId": "filterWarranties",
                "parameters": [
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "number of pageSize",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "keyword",
                        "in": "query",
                        "description": "Keyword for filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fromdate",
                        "in": "query",
                        "description": "From Date for filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "todate",
                        "in": "query",
                        "description": "To date for filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "status for filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "store_id",
                        "in": "query",
                        "description": "store id for filter",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved list of filtered warranties"
                    },
                    "default": {
                        "description": "Unable to retrieve list of warranties"
                    }
                }
            }
        },
        "/api/warranty/{uid}": {
            "get": {
                "tags": [
                    "WarrantyControllerService"
                ],
                "summary": "Retrieves warranty by Uid.",
                "operationId": "getWarrantyByUid",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Warranty_ID, NOT 'ID'.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Warranty has been retrieved successfully."
                    },
                    "default": {
                        "description": "Unable to retrieve the warranty."
                    }
                }
            },
            "put": {
                "tags": [
                    "WarrantyControllerService"
                ],
                "summary": "Update warranty by Uid.",
                "operationId": "updateWarrantyByUid",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Warranty_ID, NOT 'ID'.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Warrantyname",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "store_id",
                        "in": "query",
                        "description": "Store ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "desc",
                        "in": "query",
                        "description": "Warranty description",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "period",
                        "in": "query",
                        "description": "Warranty Period",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "policy",
                        "in": "query",
                        "description": "Warranty Policy",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Warranty has been created successfully."
                    },
                    "default": {
                        "description": "Unable to create the warranty."
                    }
                }
            },
            "delete": {
                "tags": [
                    "WarrantyControllerService"
                ],
                "summary": "Set warranty's 'status' to 0.",
                "operationId": "deleteWarrantyByUid",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Warranty ID, NOT 'ID'.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Warranty has been 'deleted' successfully."
                    },
                    "default": {
                        "description": "Unable to 'delete' the warranty."
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Article": {
                "title": "Article",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "blogger_id": {
                        "type": "integer"
                    },
                    "uid": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "desc": {
                        "type": "string"
                    },
                    "view": {
                        "type": "integer"
                    },
                    "like": {
                        "type": "integer"
                    },
                    "dislike": {
                        "type": "integer"
                    },
                    "scope": {
                        "type": "string"
                    },
                    "agerestrict": {
                        "type": "integer"
                    },
                    "status": {
                        "type": "integer"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    },
                    "commentcount": {
                        "type": "integer"
                    },
                    "articleimages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ArticleImage"
                        }
                    },
                    "store": {
                        "$ref": "#/components/schemas/Blogger"
                    },
                    "comments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Comment"
                        }
                    }
                },
                "type": "object"
            },
            "ArticleImage": {
                "title": "ArticleImage",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "uid": {
                        "type": "string"
                    },
                    "article_id": {
                        "type": "integer"
                    },
                    "title": {
                        "type": "string"
                    },
                    "desc": {
                        "type": "string"
                    },
                    "like": {
                        "type": "integer"
                    },
                    "dislike": {
                        "type": "integer"
                    },
                    "imgpublicid": {
                        "type": "string"
                    },
                    "imgpath": {
                        "type": "string"
                    },
                    "status": {
                        "type": "integer"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Blogger": {
                "title": "Blogger",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "company_id": {
                        "type": "integer"
                    },
                    "user_id": {
                        "type": "integer"
                    },
                    "uid": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "desc": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "imgpath": {
                        "type": "string"
                    },
                    "imgpublicid": {
                        "type": "string"
                    },
                    "tel1": {
                        "type": "string"
                    },
                    "companyBelongings": {
                        "type": "integer"
                    },
                    "status": {
                        "type": "integer"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    },
                    "company": {
                        "$ref": "#/components/schemas/Company"
                    }
                },
                "type": "object"
            },
            "Channel": {
                "title": "Channel",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "company_id": {
                        "type": "integer"
                    },
                    "user_id": {
                        "type": "integer"
                    },
                    "uid": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "desc": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "imgpath": {
                        "type": "string"
                    },
                    "imgpublicid": {
                        "type": "string"
                    },
                    "tel1": {
                        "type": "string"
                    },
                    "company_belongings": {
                        "type": "integer"
                    },
                    "status": {
                        "type": "integer"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    },
                    "company": {
                        "$ref": "#/components/schemas/Company"
                    }
                },
                "type": "object"
            },
            "Comment": {
                "title": "Comment",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "video_id": {
                        "type": "integer"
                    },
                    "article_id": {
                        "type": "integer"
                    },
                    "article_image_id": {
                        "type": "integer"
                    },
                    "uid": {
                        "type": "string"
                    },
                    "text": {
                        "type": "string"
                    },
                    "imgpath": {
                        "type": "string"
                    },
                    "imgpublicid": {
                        "type": "string"
                    },
                    "like": {
                        "type": "integer"
                    },
                    "dislike": {
                        "type": "integer"
                    },
                    "type": {
                        "type": "string"
                    },
                    "status": {
                        "type": "integer"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Company": {
                "title": "Company",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "company_type_id": {
                        "type": "integer"
                    },
                    "uid": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "img": {
                        "type": "string"
                    },
                    "regno": {
                        "type": "string"
                    },
                    "tel1": {
                        "type": "string"
                    },
                    "tel2": {
                        "type": "string"
                    },
                    "fax1": {
                        "type": "string"
                    },
                    "fax2": {
                        "type": "string"
                    },
                    "email1": {
                        "type": "string"
                    },
                    "email2": {
                        "type": "string"
                    },
                    "address1": {
                        "type": "string"
                    },
                    "address2": {
                        "type": "string"
                    },
                    "postcode": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "country": {
                        "type": "string"
                    },
                    "status": {
                        "type": "integer"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Inventory": {
                "title": "Inventory",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "store_id": {
                        "type": "integer"
                    },
                    "product_promotion_id": {
                        "type": "integer"
                    },
                    "shipping_id": {
                        "type": "integer"
                    },
                    "warranty_id": {
                        "type": "integer"
                    },
                    "uid": {
                        "type": "string"
                    },
                    "code": {
                        "type": "string"
                    },
                    "sku": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "imgpublicid": {
                        "type": "string"
                    },
                    "imgpath": {
                        "type": "string"
                    },
                    "desc": {
                        "type": "string"
                    },
                    "rating": {
                        "type": "number"
                    },
                    "cost": {
                        "type": "number"
                    },
                    "price": {
                        "type": "number"
                    },
                    "qty": {
                        "type": "integer"
                    },
                    "promoendqty": {
                        "type": "integer"
                    },
                    "promopctg": {
                        "type": "integer"
                    },
                    "promoprice": {
                        "type": "string"
                    },
                    "totalproductreview": {
                        "type": "integer"
                    },
                    "salesqty": {
                        "type": "integer"
                    },
                    "stockthreshold": {
                        "type": "integer"
                    },
                    "status": {
                        "type": "integer"
                    },
                    "onsale": {
                        "type": "integer"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    },
                    "store": {
                        "$ref": "#/components/schemas/Store"
                    },
                    "promotion": {
                        "$ref": "#/components/schemas/ProductPromotion"
                    },
                    "warranty": {
                        "$ref": "#/components/schemas/Warranty"
                    },
                    "shipping": {
                        "$ref": "#/components/schemas/Shipping"
                    },
                    "inventoryfamilies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/InventoryFamily"
                        }
                    },
                    "images": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/InventoryImage"
                        }
                    },
                    "reviews": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductReview"
                        }
                    },
                    "characteristics": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductCharacteristic"
                        }
                    }
                },
                "type": "object"
            },
            "InventoryFamily": {
                "title": "InventoryFamily",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "inventory_id": {
                        "type": "integer"
                    },
                    "uid": {
                        "type": "string"
                    },
                    "code": {
                        "type": "string"
                    },
                    "sku": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "desc": {
                        "type": "string"
                    },
                    "imgpublicid": {
                        "type": "string"
                    },
                    "imgpath": {
                        "type": "string"
                    },
                    "cost": {
                        "type": "number"
                    },
                    "price": {
                        "type": "number"
                    },
                    "qty": {
                        "type": "integer"
                    },
                    "salesqty": {
                        "type": "integer"
                    },
                    "onsale": {
                        "type": "integer"
                    },
                    "status": {
                        "type": "integer"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    },
                    "patterns": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Pattern"
                        }
                    }
                },
                "type": "object"
            },
            "InventoryImage": {
                "title": "InventoryImage",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "uid": {
                        "type": "string"
                    },
                    "inventory_id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "desc": {
                        "type": "string"
                    },
                    "imgpublicid": {
                        "type": "string"
                    },
                    "imgpath": {
                        "type": "string"
                    },
                    "status": {
                        "type": "integer"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Pattern": {
                "title": "Pattern",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "inventory_family_id": {
                        "type": "integer"
                    },
                    "uid": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "desc": {
                        "type": "string"
                    },
                    "imgpublicid": {
                        "type": "string"
                    },
                    "imgpath": {
                        "type": "string"
                    },
                    "cost": {
                        "type": "number"
                    },
                    "price": {
                        "type": "number"
                    },
                    "qty": {
                        "type": "integer"
                    },
                    "salesqty": {
                        "type": "integer"
                    },
                    "onsale": {
                        "type": "integer"
                    },
                    "status": {
                        "type": "integer"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ProductCharacteristic": {
                "title": "ProductCharacteristic",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "uid": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "icon": {
                        "type": "string"
                    },
                    "desc": {
                        "type": "string"
                    },
                    "status": {
                        "type": "integer"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ProductFeature": {
                "title": "ProductFeature",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "uid": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "icon": {
                        "type": "string"
                    },
                    "imgpath": {
                        "type": "string"
                    },
                    "imgpublicid": {
                        "type": "string"
                    },
                    "desc": {
                        "type": "string"
                    },
                    "status": {
                        "type": "integer"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ProductPromotion": {
                "title": "ProductPromotion",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "uid": {
                        "type": "string"
                    },
                    "store_id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "desc": {
                        "type": "string"
                    },
                    "qty": {
                        "type": "integer"
                    },
                    "disc": {
                        "type": "number"
                    },
                    "discpctg": {
                        "type": "number"
                    },
                    "discbyprice": {
                        "type": "integer"
                    },
                    "promostartdate": {
                        "type": "string"
                    },
                    "promoenddate": {
                        "type": "string"
                    },
                    "status": {
                        "type": "integer"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ProductReview": {
                "title": "ProductReview",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "inventory_id": {
                        "type": "integer"
                    },
                    "ticket_id": {
                        "type": "integer"
                    },
                    "user_id": {
                        "type": "integer"
                    },
                    "uid": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "desc": {
                        "type": "string"
                    },
                    "imgpath": {
                        "type": "string"
                    },
                    "imgpublicid": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "rating": {
                        "type": "number"
                    },
                    "like": {
                        "type": "integer"
                    },
                    "dislike": {
                        "type": "integer"
                    },
                    "status": {
                        "type": "integer"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Sale": {
                "title": "Sale",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "user_id": {
                        "type": "integer"
                    },
                    "store_id": {
                        "type": "integer"
                    },
                    "voucher_id": {
                        "type": "integer"
                    },
                    "uid": {
                        "type": "string"
                    },
                    "sono": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "contact": {
                        "type": "string"
                    },
                    "qty": {
                        "type": "integer"
                    },
                    "disc": {
                        "type": "number"
                    },
                    "totalcost": {
                        "type": "number"
                    },
                    "totalprice": {
                        "type": "number"
                    },
                    "charge": {
                        "type": "number"
                    },
                    "net": {
                        "type": "number"
                    },
                    "grandtotal": {
                        "type": "number"
                    },
                    "salestatus": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "remark": {
                        "type": "string"
                    },
                    "pos": {
                        "type": "integer"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    },
                    "user": {
                        "$ref": "#/components/schemas/User"
                    },
                    "saleitems": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SaleItem"
                        }
                    },
                    "store": {
                        "$ref": "#/components/schemas/Store"
                    }
                },
                "type": "object"
            },
            "SaleItem": {
                "title": "SaleItem",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "sale_id": {
                        "type": "integer"
                    },
                    "inventory_id": {
                        "type": "integer"
                    },
                    "inventory_family_id": {
                        "type": "integer"
                    },
                    "pattern_id": {
                        "type": "integer"
                    },
                    "ticket_id": {
                        "type": "integer"
                    },
                    "uid": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "trackingcode": {
                        "type": "string"
                    },
                    "qty": {
                        "type": "integer"
                    },
                    "desc": {
                        "type": "string"
                    },
                    "cost": {
                        "type": "number"
                    },
                    "price": {
                        "type": "number"
                    },
                    "disc": {
                        "type": "number"
                    },
                    "totalprice": {
                        "type": "number"
                    },
                    "totalcost": {
                        "type": "number"
                    },
                    "grandtotal": {
                        "type": "number"
                    },
                    "status": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Shipping": {
                "title": "Shipping",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "store_id": {
                        "type": "integer"
                    },
                    "uid": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "desc": {
                        "type": "string"
                    },
                    "price": {
                        "type": "number"
                    },
                    "maxweight": {
                        "type": "number"
                    },
                    "maxdimension": {
                        "type": "number"
                    },
                    "status": {
                        "type": "integer"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Store": {
                "title": "Store",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "company_id": {
                        "type": "integer"
                    },
                    "company": {
                        "$ref": "#/components/schemas/Company"
                    },
                    "user_id": {
                        "type": "integer"
                    },
                    "uid": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "contact": {
                        "type": "string"
                    },
                    "desc": {
                        "type": "string"
                    },
                    "imgpath": {
                        "type": "string"
                    },
                    "imgpublicid": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "rating": {
                        "type": "number"
                    },
                    "freeshippingminpurchase": {
                        "type": "number"
                    },
                    "address": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "postcode": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string"
                    },
                    "country": {
                        "type": "string"
                    },
                    "status": {
                        "type": "integer"
                    },
                    "companyBelongings": {
                        "type": "integer"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Type": {
                "title": "Type",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "uid": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "icon": {
                        "type": "string"
                    },
                    "desc": {
                        "type": "string"
                    },
                    "status": {
                        "type": "integer"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "User": {
                "title": "User",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "uid": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "icno": {
                        "type": "string"
                    },
                    "tel1": {
                        "type": "string"
                    },
                    "tel2": {
                        "type": "string"
                    },
                    "address1": {
                        "type": "string"
                    },
                    "address2": {
                        "type": "string"
                    },
                    "postcode": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "country": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "last_login": {
                        "type": "string"
                    },
                    "last_active": {
                        "type": "string"
                    },
                    "remember_token": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Video": {
                "title": "Video",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "channel_id": {
                        "type": "integer"
                    },
                    "playlist_id": {
                        "type": "integer"
                    },
                    "uid": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "desc": {
                        "type": "string"
                    },
                    "videopath": {
                        "type": "string"
                    },
                    "videopublicid": {
                        "type": "string"
                    },
                    "imgpath": {
                        "type": "string"
                    },
                    "imgpublicid": {
                        "type": "string"
                    },
                    "totallength": {
                        "type": "string"
                    },
                    "view": {
                        "type": "integer"
                    },
                    "like": {
                        "type": "integer"
                    },
                    "dislike": {
                        "type": "integer"
                    },
                    "price": {
                        "type": "number"
                    },
                    "discpctg": {
                        "type": "number"
                    },
                    "disc": {
                        "type": "number"
                    },
                    "discbyprice": {
                        "type": "integer"
                    },
                    "free": {
                        "type": "integer"
                    },
                    "salesqty": {
                        "type": "integer"
                    },
                    "scope": {
                        "type": "string"
                    },
                    "agerestrict": {
                        "type": "integer"
                    },
                    "status": {
                        "type": "integer"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    },
                    "commentcount": {
                        "type": "integer"
                    },
                    "channel": {
                        "$ref": "#/components/schemas/Channel"
                    }
                },
                "type": "object"
            },
            "Voucher": {
                "title": "Voucher",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "store_id": {
                        "type": "integer"
                    },
                    "uid": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "desc": {
                        "type": "string"
                    },
                    "qty": {
                        "type": "integer"
                    },
                    "redeemqty": {
                        "type": "integer"
                    },
                    "releaseqty": {
                        "type": "integer"
                    },
                    "disc": {
                        "type": "number"
                    },
                    "discpctg": {
                        "type": "number"
                    },
                    "discbyprice": {
                        "type": "integer"
                    },
                    "startdate": {
                        "type": "string"
                    },
                    "enddate": {
                        "type": "string"
                    },
                    "minpurchase": {
                        "type": "number"
                    },
                    "minqty": {
                        "type": "integer"
                    },
                    "minvariety": {
                        "type": "integer"
                    },
                    "status": {
                        "type": "integer"
                    },
                    "unlimited": {
                        "type": "integer"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Warranty": {
                "title": "Warranty",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "store_id": {
                        "type": "integer"
                    },
                    "uid": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "desc": {
                        "type": "string"
                    },
                    "period": {
                        "type": "integer"
                    },
                    "policy": {
                        "type": "string"
                    },
                    "status": {
                        "type": "integer"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        }
    }
}